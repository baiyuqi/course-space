{"version":3,"sources":["service/CommonUtils.js","components/Message.js","components/Loader.js","constants/userConstants.js","constants/appConstants.js","constants/productConstants.js","constants/orderConstants.js","constants/cartConstants.js","constants/addressConstants.js","constants/paymentConstants.js","store.js","reducers/productReducers.js","reducers/cartReducers.js","reducers/userReducers.js","reducers/orderReducers.js","reducers/addressReducer.js","reducers/paymentReducers.js","service/RestApiCalls.js","actions/userActions.js","screens/UserListScreen.js","components/FormContainer.js","screens/UserEditScreen.js","components/Footer.js","components/Header.js","components/Rating.js","components/Product.js","actions/productActions.js","components/FullPageLoader.js","screens/HomeScreen.js","screens/ProductScreen.js","actions/cartActions.js","components/CartItem.js","screens/CartScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/ProfileScreen.js","actions/orderActions.js","components/CheckoutSteps.js","actions/addressActions.js","screens/ShippingScreen.js","actions/paymentActions.js","screens/PaymentScreen.js","components/OrderItem.js","screens/PlaceOrderScreen.js","screens/OrderScreen.js","screens/ProductListScreen.js","screens/ProductEditScreen.js","screens/ProductCreateScreen.js","screens/OrderListScreen.js","App.js","reportWebVitals.js","index.js"],"names":["getErrorMessage","error","response","data","error_description","errors","length","message","isAdmin","userInfoLocalStorage","localStorage","getItem","token","JSON","parse","decodedToken","jwtDecode","authorities","includes","Message","variant","children","Alert","defaultProps","Loader","Spinner","animation","role","style","width","height","margin","display","className","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_DETAILS_REQUEST","USER_DETAILS_SUCCESS","USER_DETAILS_FAIL","USER_DETAILS_RESET","USER_UPDATE_PROFILE_REQUEST","USER_UPDATE_PROFILE_SUCCESS","USER_UPDATE_PROFILE_FAIL","USER_UPDATE_PROFILE_RESET","USER_LIST_REQUEST","USER_LIST_SUCCESS","USER_LIST_FAIL","USER_LIST_RESET","USER_DELETE_REQUEST","USER_DELETE_SUCCESS","USER_DELETE_FAIL","USER_UPDATE_REQUEST","USER_UPDATE_SUCCESS","USER_UPDATE_FAIL","USER_UPDATE_RESET","BACKEND_API_GATEWAY_URL","APP_CLIENT_ID","APP_CLIENT_SECRET","PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","PRODUCT_REVIEWS_REQUEST","PRODUCT_REVIEWS_SUCCESS","PRODUCT_REVIEWS_FAIL","PRODUCT_DELETE_REQUEST","PRODUCT_DELETE_SUCCESS","PRODUCT_DELETE_FAIL","PRODUCT_CREATE_REQUEST","PRODUCT_CREATE_SUCCESS","PRODUCT_CREATE_FAIL","PRODUCT_CREATE_RESET","PRODUCT_UPDATE_REQUEST","PRODUCT_UPDATE_SUCCESS","PRODUCT_UPDATE_FAIL","PRODUCT_UPDATE_RESET","PRODUCT_CREATE_REVIEW_REQUEST","PRODUCT_CREATE_REVIEW_SUCCESS","PRODUCT_CREATE_REVIEW_FAIL","PRODUCT_CREATE_REVIEW_RESET","PRODUCT_IMAGE_REQUEST","PRODUCT_IMAGE_SUCCESS","PRODUCT_IMAGE_FAIL","PRODUCT_IMAGE_RESET","ORDER_PREVIEW_REQUEST","ORDER_PREVIEW_SUCCESS","ORDER_PREVIEW_FAIL","ORDER_PREVIEW_RESET","ORDER_CREATE_REQUEST","ORDER_CREATE_SUCCESS","ORDER_CREATE_FAIL","ORDER_CREATE_RESET","ORDER_DETAILS_REQUEST","ORDER_DETAILS_SUCCESS","ORDER_DETAILS_FAIL","ORDER_LIST_MY_REQUEST","ORDER_LIST_MY_SUCCESS","ORDER_LIST_MY_FAIL","ORDER_LIST_MY_RESET","ORDER_LIST_REQUEST","ORDER_LIST_SUCCESS","ORDER_LIST_FAIL","ORDER_LIST_RESET","CART_DETAILS_REQUEST","CART_DETAILS_SUCCESS","CART_DETAILS_FAIL","CART_DETAILS_RESET","CART_ADD_ITEM_REQUEST","CART_ADD_ITEM_SUCCESS","CART_ADD_ITEM_FAIL","CART_ADD_ITEM_RESET","CART_REMOVE_ITEM_REQUEST","CART_REMOVE_ITEM_SUCCESS","CART_REMOVE_ITEM_FAIL","CART_REMOVE_ITEM_RESET","ADDRESS_ADD_REQUEST","ADDRESS_ADD_SUCCESS","ADDRESS_ADD_FAIL","ADDRESS_ADD_RESET","ADDRESS_LIST_MY_REQUEST","ADDRESS_LIST_MY_SUCCESS","ADDRESS_LIST_MY_FAIL","ADDRESS_LIST_MY_RESET","ADDRESS_DELETE_REQUEST","ADDRESS_DELETE_SUCCESS","ADDRESS_DELETE_FAIL","ADDRESS_DELETE_RESET","PAYMENT_METHOD_ADD_REQUEST","PAYMENT_METHOD_ADD_SUCCESS","PAYMENT_METHOD_ADD_FAIL","PAYMENT_METHOD_ADD_RESET","PAYMENT_METHOD_LIST_MY_REQUEST","PAYMENT_METHOD_LIST_MY_SUCCESS","PAYMENT_METHOD_LIST_MY_FAIL","PAYMENT_METHOD_LIST_MY_RESET","appReducer","combineReducers","productList","state","products","action","type","loading","payload","pageResponse","productDetails","product","productReviews","reviews","productReviewCreate","success","productDelete","productCreate","productUpdate","productImage","productimageBase64","cart","cartAdd","cartRemove","userLogin","userInfo","userRegister","window","location","href","userDetails","user","userUpdateProfile","userList","users","userDelete","userUpdate","order","billingAddressId","shippingAddressId","paymentMethodId","orderListMy","orders","orderListAll","orderPreview","orderCreate","orderDetails","addressSave","addressListMy","addresses","addressDelete","paymentMethodSave","paymentMethodListMy","paymentMethods","initialState","middleware","thunk","store","createStore","console","log","undefined","composeWithDevTools","applyMiddleware","axios","interceptors","use","originalRequest","config","status","url","clear","dispatch","Promise","reject","refreshToken","refresh_token","tokenParts","atob","split","now","Math","ceil","Date","axiosConfig","headers","Authorization","btoa","exp","post","then","updatedUserInfo","access_token","setItem","stringify","defaults","catch","err","postSignupApi","singupRequestBody","getAxiosConfig","postLoginApi","loginRequestBody","a","loginRequestBodyEncoded","qs","responseData","getUserInfoApi","get","getUserApi","userId","putUserInfoApi","userInfoRequestBody","put","getAllRolesApi","getAllUsersApi","deleteUserApi","delete","updateUserApi","userUpdateRequestBody","getProductDetailApi","productId","createProductApi","productReqBody","updateProductDetailApi","deleteProductApi","getProductReviewsApi","getProductCategories","createProductReviewApi","createProductReviewRequestBody","uploadImageApi","formData","accessToken","getImageApi","imageId","getAllProductsDetailApi","pageNumber","addToCartApi","addToCartRequestBody","getCartDetailsApi","cartDetails","sortedCart","cartItems","sort","b","cartItemId","localeCompare","removeCartItemApi","getAllOrdersApi","getAllMyOrdersApi","previewOrderApi","previewOrderRequestBody","placeOrderApi","placeOrderRequestBody","getOrderApi","orderId","saveAddressApi","addressRequestBody","getAllAddressesApi","deleteAddressApi","addressId","savePaymentMethodApi","cardRequestBody","getAllPaymentMethodsApi","logout","getUserDetails","userInfoResponse","listUsersAction","listUsersResponse","UserListScreen","history","useDispatch","useSelector","successDelete","userDeleteError","useEffect","push","deleteHandler","confirm","deleteUserAction","Table","striped","bordered","hover","responsive","map","userName","firstName","lastName","email","roles","roleName","color","to","Button","onClick","FormContainer","Container","Row","Col","xs","md","UserEditScreen","match","params","id","useState","setFirstName","setLastName","setEmail","setRoles","loadingUpdate","errorUpdate","successUpdate","Map","checkedItems","setCheckedItems","forEach","set","handleChange","event","target","name","checked","Form","onSubmit","e","preventDefault","Array","from","filter","item","i","updateUserAction","Group","controlId","Label","Control","placeholder","value","onChange","Check","inline","label","Footer","Header","props","Navbar","background","border","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","Nav","Link","NavDropdown","title","Item","Rating","text","Product","Card","Img","src","Body","Title","as","productName","Text","averageRating","noOfRatings","price","listProductsAction","allProductsDetail","page","content","listProductDetailsAction","productDetail","listProductReviewsAction","FullPageLoader","HomeScreen","sm","lg","xl","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","totalPages","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","handlePageClick","containerClassName","activeClassName","pageLinkClassName","previousClassName","nextClassName","ProductScreen","qty","setQty","rating","setRating","reviewMessage","setReviewMessage","setProductimageBase64","setProduct","successProductReview","loadingProductReview","errorProductReview","r","minWidth","Image","alt","fluid","borderLeft","ListGroup","ListGroupItem","description","availableItemCount","x","keys","disabled","borderTop","borderBottom","review","ratingValue","reviewId","row","getCartDetailsAction","cartResponse","removeFromCartAction","CartItem","addToCart","setError","setLoading","removeFromCartHandler","rounded","itemPrice","quantity","extendedPrice","CartScreen","search","Number","cartState","redirect","pathname","getCartDetail","pId","q","addToCartAction","totalPrice","LoginScreen","userNameOrEmail","setUserNameOrEmail","password","setPassword","substring","indexOf","usernameOrEmail","loginRequest","grant_type","username","loginResponse","login","RegisterScreen","setUserName","confirmPassword","setconfirmPassword","setMessage","signUpRequest","register","required","ProfileScreen","setConfirmPassword","errorUserDetails","loadingUserDetails","errorUpdateUserDetails","loadingUpdateUserDetails","errorOrderListMy","loadingOrderListMy","myOrdersData","updateUserProfile","created_at","paid","paymentDate","delivered","deliveredDate","CheckoutSteps","step1","step2","step3","step4","saveAddressAction","getMyAddresesAction","myAddressData","ShippingScreen","shippingCheckbox","setShippingCheckbox","addressLine1","setAddressLine1","addressLine2","setAddressLine2","city","setCity","setState","postalCode","setPostalCode","country","setCountry","phone","setPhone","setBillingAddressId","setShippingAddressId","addressList","addressListLoading","addressListError","addressSaveLoading","addressSaveError","getShippingAddress","saveAddressHandler","deleteAddress","deleteAddressAction","InputGroup","whiteSpace","backgroundColor","size","aria-hidden","saveShippingAddressIdToLocalStorage","saveBillingAddressIdToLocalStorage","getMyPaymentMethodsAction","paymentMethodsList","PaymentScreen","setPaymentMethodId","cardNumber","setCardNumber","expirationMonth","setExpirationMonth","expirationYear","setExpirationYear","cvv","setCvv","saveLoading","saveError","listLoading","listError","textTransform","cardType","cardLast4Digits","cardExpirationMonth","cardExpirationYear","savePaymentMethodAction","card","savePaymentMethodIdToLocalStorage","OrderItem","orderItemPrice","orderExtendedPrice","PlaceOrderScreen","previewOrderLoading","previewOrderResponse","placeOrderLoading","createOrderResponse","previewOrder","previewOrderData","previewOrderAction","shippingAddress","cardBrand","toUpperCase","last4Digits","orderItems","index","itemsTotalPrice","shippingPrice","taxPrice","placeOrderData","placeOrderAction","OrderScreen","loadingDeliver","orderDetail","getOrderData","getOrderDetailsAction","deliveredAt","paymentReceiptUrl","isPaid","isDelivered","ProductListScreen","loadingDelete","errorDelete","loadingCreate","errorCreate","successCreate","createdProduct","getState","productCategory","ProductEditScreen","setProductName","setPrice","image","setImage","setAvailableItemCount","setDescription","uploading","setUploading","uploadFileHandler","file","files","FormData","append","File","custom","ProductCreateScreen","productCategories","setProductCategories","setProductCategory","res","pc","productCategoryId","productCategoryName","OrderListScreen","orderList","ordersData","createBrowserHistory","App","path","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ab6c813a.chunk.js","sourcesContent":["import jwtDecode from 'jwt-decode';\r\n\r\nexport const getErrorMessage = (error) => {\r\n  return error\r\n    ? error.response\r\n      ? error.response.data\r\n        ? error.response.data.error_description\r\n          ? error.response.data.error_description\r\n          : error.response.data.errors.length > 0\r\n          ? error.response.data.errors[0].message\r\n          : error.message\r\n        : error.message\r\n      : error.message\r\n    : 'Something went wrong';\r\n};\r\n\r\nexport const isAdmin = () => {\r\n  const userInfoLocalStorage = localStorage.getItem('userInfo');\r\n  if (userInfoLocalStorage) {\r\n    const token = JSON.parse(userInfoLocalStorage).token;\r\n    let decodedToken = jwtDecode(token);\r\n    return decodedToken?.authorities?.includes('ADMIN_USER');\r\n  }\r\n  return false;\r\n};\r\n","import React from 'react';\r\nimport { Alert } from 'react-bootstrap';\r\n\r\nconst Message = ({ variant, children }) => {\r\n  return (\r\n    <div>\r\n      <Alert variant={variant}>{children}</Alert>\r\n    </div>\r\n  );\r\n};\r\n\r\nMessage.defaultProps = {\r\n  variant: 'info'\r\n};\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport { Spinner } from 'react-bootstrap';\r\n\r\nconst Loader = () => {\r\n  return (\r\n    <div>\r\n      <Spinner\r\n        animation='border'\r\n        role='status'\r\n        style={{\r\n          width: '100px',\r\n          height: '100px',\r\n          margin: 'auto',\r\n          display: 'block'\r\n        }}\r\n      >\r\n        <span className='sr-only'>Loading...</span>\r\n      </Spinner>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","export const USER_LOGIN_REQUEST = 'USER_LOGIN_REQUEST';\r\nexport const USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS';\r\nexport const USER_LOGIN_FAIL = 'USER_LOGIN_FAIL';\r\nexport const USER_LOGOUT = 'USER_LOGOUT';\r\n\r\nexport const USER_REGISTER_REQUEST = 'USER_REGISTER_REQUEST';\r\nexport const USER_REGISTER_SUCCESS = 'USER_REGISTER_SUCCESS';\r\nexport const USER_REGISTER_FAIL = 'USER_REGISTER_FAIL';\r\nexport const USER_REGISTER_RESET = 'USER_REGISTER_RESET';\r\n\r\nexport const USER_DETAILS_REQUEST = 'USER_DETAILS_REQUEST';\r\nexport const USER_DETAILS_SUCCESS = 'USER_DETAILS_SUCCESS';\r\nexport const USER_DETAILS_FAIL = 'USER_DETAILS_FAIL';\r\nexport const USER_DETAILS_RESET = 'USER_DETAILS_RESET';\r\n\r\nexport const USER_UPDATE_PROFILE_REQUEST = 'USER_UPDATE_PROFILE_REQUEST';\r\nexport const USER_UPDATE_PROFILE_SUCCESS = 'USER_UPDATE_PROFILE_SUCCESS';\r\nexport const USER_UPDATE_PROFILE_FAIL = 'USER_UPDATE_PROFILE_FAIL';\r\nexport const USER_UPDATE_PROFILE_RESET = 'USER_UPDATE_PROFILE_RESET';\r\n\r\nexport const USER_LIST_REQUEST = 'USER_LIST_REQUEST';\r\nexport const USER_LIST_SUCCESS = 'USER_LIST_SUCCESS';\r\nexport const USER_LIST_FAIL = 'USER_LIST_FAIL';\r\nexport const USER_LIST_RESET = 'USER_LIST_RESET';\r\n\r\nexport const USER_DELETE_REQUEST = 'USER_DELETE_REQUEST';\r\nexport const USER_DELETE_SUCCESS = 'USER_DELETE_SUCCESS';\r\nexport const USER_DELETE_FAIL = 'USER_DELETE_FAIL';\r\n\r\nexport const USER_UPDATE_REQUEST = 'USER_UPDATE_REQUEST';\r\nexport const USER_UPDATE_SUCCESS = 'USER_UPDATE_SUCCESS';\r\nexport const USER_UPDATE_FAIL = 'USER_UPDATE_FAIL';\r\nexport const USER_UPDATE_RESET = 'USER_UPDATE_RESET';\r\n","export const BACKEND_API_GATEWAY_URL = 'http://localhost:8080';\r\nexport const APP_CLIENT_ID = '93ed453e-b7ac-4192-a6d4-c45fae0d99ac';\r\nexport const APP_CLIENT_SECRET = 'client.devd123';\r\n","export const PRODUCT_LIST_REQUEST = 'PRODUCT_LIST_REQUEST';\r\nexport const PRODUCT_LIST_SUCCESS = 'PRODUCT_LIST_SUCCESS';\r\nexport const PRODUCT_LIST_FAIL = 'PRODUCT_LIST_FAIL';\r\n\r\nexport const PRODUCT_DETAILS_REQUEST = 'PRODUCT_DETAILS_REQUEST';\r\nexport const PRODUCT_DETAILS_SUCCESS = 'PRODUCT_DETAILS_SUCCESS';\r\nexport const PRODUCT_DETAILS_FAIL = 'PRODUCT_DETAILS_FAIL';\r\n\r\nexport const PRODUCT_REVIEWS_REQUEST = 'PRODUCT_REVIEWS_REQUEST';\r\nexport const PRODUCT_REVIEWS_SUCCESS = 'PRODUCT_REVIEWS_SUCCESS';\r\nexport const PRODUCT_REVIEWS_FAIL = 'PRODUCT_REVIEWS_FAIL';\r\n\r\nexport const PRODUCT_DELETE_REQUEST = 'PRODUCT_DELETE_REQUEST';\r\nexport const PRODUCT_DELETE_SUCCESS = 'PRODUCT_DELETE_SUCCESS';\r\nexport const PRODUCT_DELETE_FAIL = 'PRODUCT_DELETE_FAIL';\r\n\r\nexport const PRODUCT_CREATE_REQUEST = 'PRODUCT_CREATE_REQUEST';\r\nexport const PRODUCT_CREATE_SUCCESS = 'PRODUCT_CREATE_SUCCESS';\r\nexport const PRODUCT_CREATE_FAIL = 'PRODUCT_CREATE_FAIL';\r\nexport const PRODUCT_CREATE_RESET = 'PRODUCT_CREATE_RESET';\r\n\r\nexport const PRODUCT_UPDATE_REQUEST = 'PRODUCT_UPDATE_REQUEST';\r\nexport const PRODUCT_UPDATE_SUCCESS = 'PRODUCT_UPDATE_SUCCESS';\r\nexport const PRODUCT_UPDATE_FAIL = 'PRODUCT_UPDATE_FAIL';\r\nexport const PRODUCT_UPDATE_RESET = 'PRODUCT_UPDATE_RESET';\r\n\r\nexport const PRODUCT_CREATE_REVIEW_REQUEST = 'PRODUCT_CREATE_REVIEW_REQUEST';\r\nexport const PRODUCT_CREATE_REVIEW_SUCCESS = 'PRODUCT_CREATE_REVIEW_SUCCESS';\r\nexport const PRODUCT_CREATE_REVIEW_FAIL = 'PRODUCT_CREATE_REVIEW_FAIL';\r\nexport const PRODUCT_CREATE_REVIEW_RESET = 'PRODUCT_CREATE_REVIEW_RESET';\r\n\r\nexport const PRODUCT_TOP_REQUEST = 'PRODUCT_TOP_REQUEST';\r\nexport const PRODUCT_TOP_SUCCESS = 'PRODUCT_TOP_SUCCESS';\r\nexport const PRODUCT_TOP_FAIL = 'PRODUCT_TOP_FAIL';\r\n\r\nexport const PRODUCT_IMAGE_REQUEST = 'PRODUCT_IMAGE_REQUEST';\r\nexport const PRODUCT_IMAGE_SUCCESS = 'PRODUCT_IMAGE_SUCCESS';\r\nexport const PRODUCT_IMAGE_FAIL = 'PRODUCT_IMAGE_FAIL';\r\nexport const PRODUCT_IMAGE_RESET = 'PRODUCT_IMAGE_RESET';\r\n","export const ORDER_PREVIEW_REQUEST = 'ORDER_PREVIEW_REQUEST';\r\nexport const ORDER_PREVIEW_SUCCESS = 'ORDER_PREVIEW_SUCCESS';\r\nexport const ORDER_PREVIEW_FAIL = 'ORDER_PREVIEW_FAIL';\r\nexport const ORDER_PREVIEW_RESET = 'ORDER_PREVIEW_RESET';\r\n\r\nexport const ORDER_CREATE_REQUEST = 'ORDER_CREATE_REQUEST';\r\nexport const ORDER_CREATE_SUCCESS = 'ORDER_CREATE_SUCCESS';\r\nexport const ORDER_CREATE_FAIL = 'ORDER_CREATE_FAIL';\r\nexport const ORDER_CREATE_RESET = 'ORDER_CREATE_RESET';\r\n\r\nexport const ORDER_DETAILS_REQUEST = 'ORDER_DETAILS_REQUEST';\r\nexport const ORDER_DETAILS_SUCCESS = 'ORDER_DETAILS_SUCCESS';\r\nexport const ORDER_DETAILS_FAIL = 'ORDER_DETAILS_FAIL';\r\n\r\nexport const ORDER_PAY_REQUEST = 'ORDER_PAY_REQUEST';\r\nexport const ORDER_PAY_SUCCESS = 'ORDER_PAY_SUCCESS';\r\nexport const ORDER_PAY_FAIL = 'ORDER_PAY_FAIL';\r\nexport const ORDER_PAY_RESET = 'ORDER_PAY_RESET';\r\n\r\nexport const ORDER_LIST_MY_REQUEST = 'ORDER_LIST_MY_REQUEST';\r\nexport const ORDER_LIST_MY_SUCCESS = 'ORDER_LIST_MY_SUCCESS';\r\nexport const ORDER_LIST_MY_FAIL = 'ORDER_LIST_MY_FAIL';\r\nexport const ORDER_LIST_MY_RESET = 'ORDER_LIST_MY_RESET';\r\n\r\nexport const ORDER_LIST_REQUEST = 'ORDER_LIST_REQUEST';\r\nexport const ORDER_LIST_SUCCESS = 'ORDER_LIST_SUCCESS';\r\nexport const ORDER_LIST_FAIL = 'ORDER_LIST_FAIL';\r\nexport const ORDER_LIST_RESET = 'ORDER_LIST_RESET';\r\n\r\nexport const ORDER_DELIVER_REQUEST = 'ORDER_DELIVER_REQUEST';\r\nexport const ORDER_DELIVER_SUCCESS = 'ORDER_DELIVER_SUCCESS';\r\nexport const ORDER_DELIVER_FAIL = 'ORDER_DELIVER_FAIL';\r\nexport const ORDER_DELIVER_RESET = 'ORDER_DELIVER_RESET';\r\n","export const CART_CLEAR_ITEMS = 'CART_RESET';\r\nexport const CART_REMOVE_ITEM = 'CART_REMOVE_ITEM';\r\nexport const CART_SAVE_SHIPPING_ADDRESS = 'CART_SAVE_SHIPPING_ADDRESS';\r\nexport const CART_SAVE_PAYMENT_METHOD = 'CART_SAVE_PAYMENT_METHOD';\r\n\r\nexport const CART_DETAILS_REQUEST = 'CART_DETAILS_REQUEST';\r\nexport const CART_DETAILS_SUCCESS = 'CART_DETAILS_SUCCESS';\r\nexport const CART_DETAILS_FAIL = 'CART_DETAILS_FAIL';\r\nexport const CART_DETAILS_RESET = 'CART_DETAILS_RESET';\r\n\r\nexport const CART_ADD_ITEM_REQUEST = 'CART_ADD_ITEM_REQUEST';\r\nexport const CART_ADD_ITEM_SUCCESS = 'CART_ADD_ITEM_SUCCESS';\r\nexport const CART_ADD_ITEM_FAIL = 'CART_ADD_ITEM_FAIL';\r\nexport const CART_ADD_ITEM_RESET = 'CART_ADD_ITEM_RESET';\r\n\r\nexport const CART_REMOVE_ITEM_REQUEST = 'CART_REMOVE_ITEM_REQUEST';\r\nexport const CART_REMOVE_ITEM_SUCCESS = 'CART_REMOVE_ITEM_SUCCESS';\r\nexport const CART_REMOVE_ITEM_FAIL = 'CART_REMOVE_ITEM_FAIL';\r\nexport const CART_REMOVE_ITEM_RESET = 'CART_REMOVE_ITEM_RESET';\r\n","export const ADDRESS_ADD_REQUEST = 'ADDRESS_ADD_REQUEST';\r\nexport const ADDRESS_ADD_SUCCESS = 'ADDRESS_ADD_SUCCESS';\r\nexport const ADDRESS_ADD_FAIL = 'ADDRESS_ADD_FAIL';\r\nexport const ADDRESS_ADD_RESET = 'ADDRESS_ADD_RESET';\r\n\r\nexport const ADDRESS_LIST_MY_REQUEST = 'ADDRESS_LIST_MY_REQUEST';\r\nexport const ADDRESS_LIST_MY_SUCCESS = 'ADDRESS_LIST_MY_SUCCESS';\r\nexport const ADDRESS_LIST_MY_FAIL = 'ADDRESS_LIST_MY_FAIL';\r\nexport const ADDRESS_LIST_MY_RESET = 'ADDRESS_LIST_MY_RESET';\r\n\r\nexport const ADDRESS_DELETE_REQUEST = 'ADDRESS_DELETE_REQUEST';\r\nexport const ADDRESS_DELETE_SUCCESS = 'ADDRESS_DELETE_SUCCESS';\r\nexport const ADDRESS_DELETE_FAIL = 'ADDRESS_DELETE_FAIL';\r\nexport const ADDRESS_DELETE_RESET = 'ADDRESS_DELETE_RESET';\r\n","export const PAYMENT_METHOD_ADD_REQUEST = 'PAYMENT_METHOD_ADD_REQUEST';\r\nexport const PAYMENT_METHOD_ADD_SUCCESS = 'PAYMENT_METHOD_ADD_SUCCESS';\r\nexport const PAYMENT_METHOD_ADD_FAIL = 'PAYMENT_METHOD_ADD_FAIL';\r\nexport const PAYMENT_METHOD_ADD_RESET = 'PAYMENT_METHOD_ADD_RESET';\r\n\r\nexport const PAYMENT_METHOD_LIST_MY_REQUEST = 'PAYMENT_METHOD_LIST_MY_REQUEST';\r\nexport const PAYMENT_METHOD_LIST_MY_SUCCESS = 'PAYMENT_METHOD_LIST_MY_SUCCESS';\r\nexport const PAYMENT_METHOD_LIST_MY_FAIL = 'PAYMENT_METHOD_LIST_MY_FAIL';\r\nexport const PAYMENT_METHOD_LIST_MY_RESET = 'PAYMENT_METHOD_LIST_MY_RESET';\r\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport {\r\n  productListReducer,\r\n  productDetailsReducer,\r\n  productReviewsReducer,\r\n  productReviewCreateReducer,\r\n  productCreateReducer,\r\n  productDeleteReducer,\r\n  productUpdateReducer,\r\n  productImageReducer\r\n} from './reducers/productReducers';\r\nimport {\r\n  userLoginReducer,\r\n  userRegisterReducer,\r\n  userDetailsReducer,\r\n  userUpdateProfileReducer,\r\n  userListReducer,\r\n  userDeleteReducer,\r\n  userUpdateReducer\r\n} from './reducers/userReducers';\r\nimport {\r\n  orderListMyReducer,\r\n  orderReducer,\r\n  orderPreviewReducer,\r\n  orderCreateReducer,\r\n  orderDetailsReducer,\r\n  orderListAllReducer\r\n} from './reducers/orderReducers';\r\nimport { cartAddReducer, cartDetailReducer, cartRemoveReducer } from './reducers/cartReducers';\r\nimport { addressDeleteReducer, addressListMyReducer, addressSaveReducer } from './reducers/addressReducer';\r\nimport { paymentMethodListMyReducer, paymentMethodSaveReducer } from './reducers/paymentReducers';\r\n\r\nconst appReducer = combineReducers({\r\n  productList: productListReducer,\r\n  productDetails: productDetailsReducer,\r\n  productReviews: productReviewsReducer,\r\n  productReviewCreate: productReviewCreateReducer,\r\n  productDelete: productDeleteReducer,\r\n  productCreate: productCreateReducer,\r\n  productUpdate: productUpdateReducer,\r\n  productImage: productImageReducer,\r\n  cart: cartDetailReducer,\r\n  cartAdd: cartAddReducer,\r\n  cartRemove: cartRemoveReducer,\r\n  userLogin: userLoginReducer,\r\n  userRegister: userRegisterReducer,\r\n  userDetails: userDetailsReducer,\r\n  userUpdateProfile: userUpdateProfileReducer,\r\n  userList: userListReducer,\r\n  userDelete: userDeleteReducer,\r\n  userUpdate: userUpdateReducer,\r\n  order: orderReducer,\r\n  orderListMy: orderListMyReducer,\r\n  orderListAll: orderListAllReducer,\r\n  orderPreview: orderPreviewReducer,\r\n  orderCreate: orderCreateReducer,\r\n  orderDetails: orderDetailsReducer,\r\n  addressSave: addressSaveReducer,\r\n  addressListMy: addressListMyReducer,\r\n  addressDelete: addressDeleteReducer,\r\n  paymentMethodSave: paymentMethodSaveReducer,\r\n  paymentMethodListMy: paymentMethodListMyReducer\r\n});\r\n\r\nconst userInfoFromStorage = localStorage.getItem('userInfo') ? JSON.parse(localStorage.getItem('userInfo')) : null;\r\nconst billingAddressId = localStorage.getItem('billingAddressId') ? localStorage.getItem('billingAddressId') : null;\r\nconst shippingAddressId = localStorage.getItem('shippingAddressId') ? localStorage.getItem('shippingAddressId') : null;\r\nconst paymentMethodId = localStorage.getItem('paymentMethodId') ? localStorage.getItem('paymentMethodId') : null;\r\n\r\nconst initialState = {\r\n  userLogin: { userInfo: userInfoFromStorage },\r\n  order: {\r\n    billingAddressId,\r\n    shippingAddressId,\r\n    paymentMethodId\r\n  }\r\n};\r\n\r\nconst rootReducer = (state, action) => {\r\n  if (action.type === 'USER_LOGOUT') {\r\n    console.log('Logout Root Reducer');\r\n    state = undefined;\r\n  }\r\n  return appReducer(state, action);\r\n};\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(rootReducer, initialState, composeWithDevTools(applyMiddleware(...middleware)));\r\n\r\nexport default store;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_REVIEWS_REQUEST,\r\n  PRODUCT_REVIEWS_SUCCESS,\r\n  PRODUCT_REVIEWS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_CREATE_RESET,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_UPDATE_RESET,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_CREATE_REVIEW_RESET,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_IMAGE_REQUEST,\r\n  PRODUCT_IMAGE_SUCCESS,\r\n  PRODUCT_IMAGE_FAIL,\r\n  PRODUCT_IMAGE_RESET\r\n} from '../constants/productConstants';\r\n\r\nexport const productListReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_LIST_REQUEST:\r\n      return { loading: true, products: [] };\r\n    case PRODUCT_LIST_SUCCESS:\r\n      return { loading: false, products: action.payload, pageResponse: action.pageResponse };\r\n    case PRODUCT_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDetailsReducer = (state = { products: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DETAILS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_DETAILS_SUCCESS:\r\n      return { loading: false, product: action.payload };\r\n    case PRODUCT_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewsReducer = (state = { reviews: [] }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_REVIEWS_REQUEST:\r\n      return { loading: true, ...state };\r\n    case PRODUCT_REVIEWS_SUCCESS:\r\n      return { loading: false, reviews: action.payload };\r\n    case PRODUCT_REVIEWS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productReviewCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REVIEW_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_REVIEW_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_CREATE_REVIEW_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_REVIEW_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case PRODUCT_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productCreateReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_CREATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_CREATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_CREATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_CREATE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productUpdateReducer = (state = { product: {} }, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_UPDATE_SUCCESS:\r\n      return { loading: false, success: true, product: action.payload };\r\n    case PRODUCT_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_UPDATE_RESET:\r\n      return { product: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const productImageReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PRODUCT_IMAGE_REQUEST:\r\n      return { loading: true };\r\n    case PRODUCT_IMAGE_SUCCESS:\r\n      return { loading: false, success: true, productimageBase64: action.payload };\r\n    case PRODUCT_IMAGE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case PRODUCT_IMAGE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  CART_ADD_ITEM_REQUEST,\r\n  CART_ADD_ITEM_SUCCESS,\r\n  CART_ADD_ITEM_FAIL,\r\n  CART_ADD_ITEM_RESET,\r\n  CART_REMOVE_ITEM_REQUEST,\r\n  CART_REMOVE_ITEM_SUCCESS,\r\n  CART_REMOVE_ITEM_FAIL,\r\n  CART_REMOVE_ITEM_RESET,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_CLEAR_ITEMS,\r\n  CART_DETAILS_REQUEST,\r\n  CART_DETAILS_SUCCESS,\r\n  CART_DETAILS_FAIL,\r\n  CART_DETAILS_RESET\r\n} from '../constants/cartConstants';\r\n\r\n// export const cartReducer = (state, action) => {\r\n//   switch (action.type) {\r\n//     case CART_ADD_ITEM_REQUEST:\r\n//       return {\r\n//         loading: false,\r\n//         cart: action.payload\r\n//       };\r\n//     //   const item = action.payload;\r\n\r\n//     //   const existItem = state.cartItems.find((x) => x.product === item.product);\r\n\r\n//     //   if (existItem) {\r\n//     //     return {\r\n//     //       ...state,\r\n//     //       cartItems: state.cartItems.map((x) => (x.product === existItem.product ? item : x))\r\n//     //     };\r\n//     //   } else {\r\n//     //     return {\r\n//     //       ...state,\r\n//     //       cartItems: [...state.cartItems, item]\r\n//     //     };\r\n//     //   }\r\n//     case CART_DETAILS_REQUEST: {\r\n//       return {\r\n//         loading: false,\r\n//         cart: action.payload\r\n//       };\r\n//     }\r\n//     case CART_REMOVE_ITEM:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: state.cartItems.filter((x) => x.product !== action.payload)\r\n//       };\r\n//     case CART_SAVE_SHIPPING_ADDRESS:\r\n//       return {\r\n//         ...state,\r\n//         shippingAddress: action.payload\r\n//       };\r\n//     case CART_SAVE_PAYMENT_METHOD:\r\n//       return {\r\n//         ...state,\r\n//         paymentMethod: action.payload\r\n//       };\r\n//     case CART_CLEAR_ITEMS:\r\n//       return {\r\n//         ...state,\r\n//         cartItems: []\r\n//       };\r\n//     default:\r\n//       return state;\r\n//   }\r\n// };\r\n\r\nexport const cartDetailReducer = (state = { cart: {} }, action) => {\r\n  switch (action.type) {\r\n    case CART_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case CART_DETAILS_SUCCESS:\r\n      return { loading: false, cart: action.payload };\r\n    case CART_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CART_DETAILS_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cartAddReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CART_ADD_ITEM_REQUEST:\r\n      return { loading: true };\r\n    case CART_ADD_ITEM_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CART_ADD_ITEM_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CART_ADD_ITEM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const cartRemoveReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case CART_REMOVE_ITEM_REQUEST:\r\n      return { loading: true };\r\n    case CART_REMOVE_ITEM_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case CART_REMOVE_ITEM_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case CART_REMOVE_ITEM_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_RESET,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_RESET,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_RESET,\r\n  USER_UPDATE_REQUEST,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_PROFILE_RESET\r\n} from '../constants/userConstants';\r\nimport { history } from '../App';\r\n\r\nexport const userLoginReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_LOGIN_REQUEST':\r\n      return { loading: true };\r\n    case 'USER_LOGIN_SUCCESS':\r\n      return { loading: false, userInfo: action.payload };\r\n    case 'USER_LOGIN_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_LOGOUT':\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userRegisterReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'USER_REGISTER_REQUEST':\r\n      return { loading: true, error: null };\r\n    case 'USER_REGISTER_SUCCESS':\r\n      return { loading: false, userInfo: action.payload };\r\n    case 'USER_REGISTER_FAIL':\r\n      return { loading: false, error: action.payload };\r\n    case 'USER_REGISTER_RESET':\r\n      return { loading: false, error: null };\r\n    case 'USER_LOGOUT':\r\n      window.location.href = '/login';\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDetailsReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_DETAILS_REQUEST:\r\n      return { ...state, loading: true };\r\n    case USER_DETAILS_SUCCESS:\r\n      return { loading: false, user: action.payload };\r\n    case USER_DETAILS_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_DETAILS_RESET:\r\n      return { user: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateProfileReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_PROFILE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_PROFILE_SUCCESS:\r\n      return { loading: false, success: true, userInfo: action.payload };\r\n    case USER_UPDATE_PROFILE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_PROFILE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userListReducer = (state = { users: [] }, action) => {\r\n  switch (action.type) {\r\n    case USER_LIST_REQUEST:\r\n      return { loading: true };\r\n    case USER_LIST_SUCCESS:\r\n      return { loading: false, users: action.payload };\r\n    case USER_LIST_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_LIST_RESET:\r\n      return { users: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case USER_DELETE_REQUEST:\r\n      return { loading: true };\r\n    case USER_DELETE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_DELETE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const userUpdateReducer = (state = { user: {} }, action) => {\r\n  switch (action.type) {\r\n    case USER_UPDATE_REQUEST:\r\n      return { loading: true };\r\n    case USER_UPDATE_SUCCESS:\r\n      return { loading: false, success: true };\r\n    case USER_UPDATE_FAIL:\r\n      return { loading: false, error: action.payload };\r\n    case USER_UPDATE_RESET:\r\n      return {\r\n        user: {}\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ORDER_PREVIEW_REQUEST,\r\n  ORDER_PREVIEW_SUCCESS,\r\n  ORDER_PREVIEW_FAIL,\r\n  ORDER_PREVIEW_RESET,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_CREATE_RESET,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_MY_RESET,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_LIST_RESET,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST\r\n} from '../constants/orderConstants';\r\n\r\nexport const orderReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case 'ORDER_SAVE_BILLING_ADDRESS':\r\n      return {\r\n        ...state,\r\n        billingAddressId: action.payload\r\n      };\r\n    case 'ORDER_SAVE_SHIPPING_ADDRESS':\r\n      return {\r\n        ...state,\r\n        shippingAddressId: action.payload\r\n      };\r\n    case 'ORDER_SAVE_PAYMENT_METHOD':\r\n      return {\r\n        ...state,\r\n        paymentMethodId: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListAllReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_LIST_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_LIST_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_LIST_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderListMyReducer = (state = { orders: [] }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_LIST_MY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        orders: action.payload\r\n      };\r\n    case ORDER_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_LIST_MY_RESET:\r\n      return { orders: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderPreviewReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_PREVIEW_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_PREVIEW_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case ORDER_PREVIEW_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_PREVIEW_RESET:\r\n      return { order: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderCreateReducer = (state = { order: {} }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_CREATE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_CREATE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case ORDER_CREATE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ORDER_CREATE_RESET:\r\n      return { order: {} };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const orderDetailsReducer = (state = { order: {}, loading: true }, action) => {\r\n  switch (action.type) {\r\n    case ORDER_DETAILS_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ORDER_DETAILS_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        order: action.payload\r\n      };\r\n    case ORDER_DETAILS_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  ADDRESS_ADD_REQUEST,\r\n  ADDRESS_ADD_SUCCESS,\r\n  ADDRESS_ADD_FAIL,\r\n  ADDRESS_ADD_RESET,\r\n  ADDRESS_LIST_MY_REQUEST,\r\n  ADDRESS_LIST_MY_SUCCESS,\r\n  ADDRESS_LIST_MY_FAIL,\r\n  ADDRESS_LIST_MY_RESET,\r\n  ADDRESS_DELETE_REQUEST,\r\n  ADDRESS_DELETE_SUCCESS,\r\n  ADDRESS_DELETE_FAIL,\r\n  ADDRESS_DELETE_RESET\r\n} from '../constants/addressConstants';\r\n\r\nexport const addressSaveReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADDRESS_ADD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADDRESS_ADD_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ADDRESS_ADD_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ADDRESS_ADD_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addressListMyReducer = (state = { addresses: [] }, action) => {\r\n  switch (action.type) {\r\n    case ADDRESS_LIST_MY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADDRESS_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        addresses: action.payload\r\n      };\r\n    case ADDRESS_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ADDRESS_LIST_MY_RESET:\r\n      return { addresses: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const addressDeleteReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case ADDRESS_DELETE_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case ADDRESS_DELETE_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case ADDRESS_DELETE_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case ADDRESS_DELETE_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n  PAYMENT_METHOD_ADD_REQUEST,\r\n  PAYMENT_METHOD_ADD_SUCCESS,\r\n  PAYMENT_METHOD_ADD_FAIL,\r\n  PAYMENT_METHOD_ADD_RESET,\r\n  PAYMENT_METHOD_LIST_MY_REQUEST,\r\n  PAYMENT_METHOD_LIST_MY_SUCCESS,\r\n  PAYMENT_METHOD_LIST_MY_FAIL,\r\n  PAYMENT_METHOD_LIST_MY_RESET\r\n} from '../constants/paymentConstants';\r\n\r\nexport const paymentMethodSaveReducer = (state = {}, action) => {\r\n  switch (action.type) {\r\n    case PAYMENT_METHOD_ADD_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case PAYMENT_METHOD_ADD_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        success: true\r\n      };\r\n    case PAYMENT_METHOD_ADD_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case PAYMENT_METHOD_ADD_RESET:\r\n      return {};\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const paymentMethodListMyReducer = (state = { paymentMethods: [] }, action) => {\r\n  switch (action.type) {\r\n    case PAYMENT_METHOD_LIST_MY_REQUEST:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    case PAYMENT_METHOD_LIST_MY_SUCCESS:\r\n      return {\r\n        loading: false,\r\n        paymentMethods: action.payload\r\n      };\r\n    case PAYMENT_METHOD_LIST_MY_FAIL:\r\n      return {\r\n        loading: false,\r\n        error: action.payload\r\n      };\r\n    case PAYMENT_METHOD_LIST_MY_RESET:\r\n      return { paymentMethods: [] };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { APP_CLIENT_ID, APP_CLIENT_SECRET, BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport axios from 'axios';\r\nimport qs from 'qs';\r\nimport store from '../store';\r\nimport { USER_LOGOUT } from '../constants/userConstants';\r\n\r\naxios.interceptors.response.use(\r\n  (response) => response,\r\n  (error) => {\r\n    const originalRequest = error.config;\r\n\r\n    // Prevent infinite loops\r\n    if (error.response.status === 401 && originalRequest.url.includes('grant_type=refresh_token')) {\r\n      localStorage.clear();\r\n      store.dispatch({\r\n        type: USER_LOGOUT\r\n      });\r\n      return Promise.reject(error);\r\n    }\r\n\r\n    if (error.response.status === 401) {\r\n      console.log('Refreshing Token');\r\n      const refreshToken = JSON.parse(localStorage.getItem('userInfo'))?.refresh_token;\r\n      if (refreshToken) {\r\n        const tokenParts = JSON.parse(atob(refreshToken.split('.')[1]));\r\n        // exp date in token is expressed in seconds, while now() returns milliseconds:\r\n        const now = Math.ceil(Date.now() / 1000);\r\n\r\n        const axiosConfig = {\r\n          headers: {\r\n            Authorization: 'Basic ' + btoa(APP_CLIENT_ID + ':' + APP_CLIENT_SECRET)\r\n          }\r\n        };\r\n\r\n        if (tokenParts.exp > now) {\r\n          return axios\r\n            .post(\r\n              `${BACKEND_API_GATEWAY_URL}/oauth/token?grant_type=refresh_token&refresh_token=${refreshToken}`,\r\n              null,\r\n              axiosConfig\r\n            )\r\n            .then((response) => {\r\n              const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n              const updatedUserInfo = {\r\n                ...userInfo,\r\n                token: response.data.access_token\r\n              };\r\n              localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n              axios.defaults.headers['Authorization'] = 'Bearer ' + response.data.access_token;\r\n              originalRequest.headers['Authorization'] = 'Bearer ' + response.data.access_token;\r\n              return axios(originalRequest);\r\n            })\r\n            .catch((err) => {\r\n              console.error('Error while getting token using refresh token.', err);\r\n            });\r\n        } else {\r\n          console.log('Refresh token is expired', tokenParts.exp, now);\r\n          store.dispatch({\r\n            type: USER_LOGOUT\r\n          });\r\n        }\r\n      } else {\r\n        console.log('Refresh token not available.');\r\n        store.dispatch({\r\n          type: USER_LOGOUT\r\n        });\r\n      }\r\n    }\r\n\r\n    // specific error handling done elsewhere\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport const postSignupApi = (singupRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.post(`${BACKEND_API_GATEWAY_URL}/signup`, singupRequestBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const postLoginApi = async (loginRequestBody) => {\r\n  const axiosConfig = {\r\n    headers: {\r\n      'Authorization': 'Basic ' + btoa(APP_CLIENT_ID + ':' + APP_CLIENT_SECRET),\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n  };\r\n  const loginRequestBodyEncoded = qs.stringify(loginRequestBody);\r\n  const responseData = await axios\r\n    .post(`${BACKEND_API_GATEWAY_URL}/oauth/token`, loginRequestBodyEncoded, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const getUserInfoApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios.get(`${BACKEND_API_GATEWAY_URL}/userInfo`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getUserApi = async (userId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios.get(`${BACKEND_API_GATEWAY_URL}/user?userId=${userId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const putUserInfoApi = async (userInfoRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios\r\n    .put(`${BACKEND_API_GATEWAY_URL}/userInfo`, userInfoRequestBody, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllRolesApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/roles`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllUsersApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/users`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const deleteUserApi = async (userId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.delete(`${BACKEND_API_GATEWAY_URL}/user/${userId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const updateUserApi = async (userId, userUpdateRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios\r\n    .put(`${BACKEND_API_GATEWAY_URL}/user/${userId}`, userUpdateRequestBody, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const getProductDetailApi = async (productId) => {\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/product/${productId}`).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const createProductApi = async (productReqBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios.post(`${BACKEND_API_GATEWAY_URL}/product`, productReqBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const updateProductDetailApi = async (productReqBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios.put(`${BACKEND_API_GATEWAY_URL}/product`, productReqBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const deleteProductApi = async (productId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = await axios.delete(`${BACKEND_API_GATEWAY_URL}/product/${productId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getProductReviewsApi = async (productId) => {\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/review?productId=${productId}`).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getProductCategories = async () => {\r\n  const responseData = axios\r\n    .get(`${BACKEND_API_GATEWAY_URL}/productCategories?direction=ASC&orderBy=PRODUCTCATEGORYNAME`)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const createProductReviewApi = async (createProductReviewRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios\r\n    .post(`${BACKEND_API_GATEWAY_URL}/review`, createProductReviewRequestBody, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const uploadImageApi = async (axiosConfig, formData) => {\r\n  const accessToken = JSON.parse(localStorage.getItem('userInfo'))?.token;\r\n\r\n  if (accessToken) {\r\n    axiosConfig.headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n\r\n  const responseData = await axios.post(`${BACKEND_API_GATEWAY_URL}/image/upload`, formData, axiosConfig).then((response) => {\r\n    console.log('Resp ::', response.data);\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getImageApi = async (imageId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/image/${imageId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllProductsDetailApi = async (pageNumber) => {\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/products?page=${pageNumber}&size=8`).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const addToCartApi = async (addToCartRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios\r\n    .post(`${BACKEND_API_GATEWAY_URL}/cart/cartItem`, addToCartRequestBody, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const getCartDetailsApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const cartDetails = await axios.get(`${BACKEND_API_GATEWAY_URL}/cart`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n\r\n  let sortedCart = {\r\n    ...cartDetails,\r\n    cartItems: cartDetails.cartItems.sort((a, b) => {\r\n      return a.cartItemId.localeCompare(b.cartItemId);\r\n    })\r\n  };\r\n\r\n  return sortedCart;\r\n};\r\n\r\nexport const removeCartItemApi = async (cartItemId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.delete(`${BACKEND_API_GATEWAY_URL}/cart/cartItem/${cartItemId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllOrdersApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/orders`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllMyOrdersApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/order/myorders`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\nexport const previewOrderApi = async (previewOrderRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios\r\n    .post(`${BACKEND_API_GATEWAY_URL}/previewOrder`, previewOrderRequestBody, axiosConfig)\r\n    .then((response) => {\r\n      return response.data;\r\n    });\r\n  return responseData;\r\n};\r\n\r\nexport const placeOrderApi = async (placeOrderRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.post(`${BACKEND_API_GATEWAY_URL}/order`, placeOrderRequestBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getOrderApi = async (orderId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/order/${orderId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const saveAddressApi = async (addressRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.post(`${BACKEND_API_GATEWAY_URL}/address`, addressRequestBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllAddressesApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/address`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const deleteAddressApi = async (addressId) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.delete(`${BACKEND_API_GATEWAY_URL}/address/${addressId}`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const savePaymentMethodApi = async (cardRequestBody) => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.post(`${BACKEND_API_GATEWAY_URL}/paymentMethod`, cardRequestBody, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nexport const getAllPaymentMethodsApi = async () => {\r\n  const axiosConfig = getAxiosConfig();\r\n  const responseData = axios.get(`${BACKEND_API_GATEWAY_URL}/paymentMethod`, axiosConfig).then((response) => {\r\n    return response.data;\r\n  });\r\n  return responseData;\r\n};\r\n\r\nconst getAxiosConfig = () => {\r\n  const axiosConfig = {\r\n    headers: {\r\n      'Content-Type': 'application/json'\r\n    }\r\n  };\r\n\r\n  const accessToken = JSON.parse(localStorage.getItem('userInfo'))?.token;\r\n\r\n  if (accessToken) {\r\n    axiosConfig.headers.Authorization = `Bearer ${accessToken}`;\r\n  }\r\n  return axiosConfig;\r\n};\r\n","import {\r\n  USER_DETAILS_FAIL,\r\n  USER_DETAILS_REQUEST,\r\n  USER_DETAILS_SUCCESS,\r\n  USER_LOGIN_FAIL,\r\n  USER_LOGIN_REQUEST,\r\n  USER_LOGIN_SUCCESS,\r\n  USER_LOGOUT,\r\n  USER_REGISTER_FAIL,\r\n  USER_REGISTER_REQUEST,\r\n  USER_REGISTER_SUCCESS,\r\n  USER_UPDATE_PROFILE_FAIL,\r\n  USER_UPDATE_PROFILE_REQUEST,\r\n  USER_UPDATE_PROFILE_SUCCESS,\r\n  USER_DETAILS_RESET,\r\n  USER_LIST_FAIL,\r\n  USER_LIST_SUCCESS,\r\n  USER_LIST_REQUEST,\r\n  USER_LIST_RESET,\r\n  USER_DELETE_REQUEST,\r\n  USER_DELETE_SUCCESS,\r\n  USER_DELETE_FAIL,\r\n  USER_UPDATE_FAIL,\r\n  USER_UPDATE_SUCCESS,\r\n  USER_UPDATE_REQUEST\r\n} from '../constants/userConstants';\r\n\r\nimport {\r\n  getUserInfoApi,\r\n  postLoginApi,\r\n  postSignupApi,\r\n  putUserInfoApi,\r\n  deleteUserApi,\r\n  getAllUsersApi,\r\n  getUserApi,\r\n  updateUserApi\r\n} from '../service/RestApiCalls';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\n\r\nexport const login = (usernameOrEmail, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LOGIN_REQUEST\r\n    });\r\n\r\n    const loginRequest = {\r\n      grant_type: 'password',\r\n      username: usernameOrEmail,\r\n      password: password\r\n    };\r\n\r\n    //Login\r\n    const loginResponse = await postLoginApi(loginRequest);\r\n\r\n    const userInfo = {\r\n      token: loginResponse.access_token\r\n    };\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n\r\n    //Get UserInfo\r\n    const userInfoResponse = await getUserInfoApi();\r\n    userInfoResponse.token = loginResponse.access_token;\r\n    userInfoResponse.refresh_token = loginResponse.refresh_token;\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: userInfoResponse\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfoResponse));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_LOGIN_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const logout = () => (dispatch) => {\r\n  localStorage.clear();\r\n  console.log('LOGOUT ACTION!!!');\r\n  dispatch({\r\n    type: USER_LOGOUT\r\n  });\r\n};\r\n\r\nexport const register = (userName, firstName, email, password) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_REGISTER_REQUEST\r\n    });\r\n\r\n    //SignUp\r\n    const signUpRequest = {\r\n      grant_type: 'password',\r\n      userName,\r\n      password,\r\n      firstName,\r\n      email\r\n    };\r\n\r\n    //SignUp\r\n    await postSignupApi(signUpRequest);\r\n\r\n    //Login\r\n    const loginRequest = {\r\n      grant_type: 'password',\r\n      username: userName,\r\n      password: password\r\n    };\r\n    const loginResponse = await postLoginApi(loginRequest);\r\n\r\n    const userInfo = {\r\n      token: loginResponse.access_token\r\n    };\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfo));\r\n\r\n    //Get UserInfo\r\n    const userInfoResponse = await getUserInfoApi();\r\n    userInfoResponse.token = loginResponse.access_token;\r\n\r\n    dispatch({\r\n      type: USER_REGISTER_SUCCESS,\r\n      payload: userInfoResponse\r\n    });\r\n\r\n    dispatch({\r\n      type: USER_LOGIN_SUCCESS,\r\n      payload: userInfoResponse\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(userInfoResponse));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_REGISTER_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getUserDetails = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DETAILS_REQUEST\r\n    });\r\n\r\n    let userInfoResponse;\r\n    if (userId) {\r\n      userInfoResponse = await getUserApi(userId);\r\n    } else {\r\n      //Get UserInfo\r\n      userInfoResponse = await getUserInfoApi();\r\n    }\r\n\r\n    dispatch({\r\n      type: USER_DETAILS_SUCCESS,\r\n      payload: userInfoResponse\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DETAILS_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserProfile = (user) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_REQUEST\r\n    });\r\n\r\n    //Update userInfo\r\n    await putUserInfoApi(user);\r\n\r\n    const userInfo = JSON.parse(localStorage.getItem('userInfo'));\r\n\r\n    const updatedUserInfo = {\r\n      ...userInfo,\r\n      ...user\r\n    };\r\n\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_SUCCESS,\r\n      payload: updatedUserInfo\r\n    });\r\n\r\n    localStorage.setItem('userInfo', JSON.stringify(updatedUserInfo));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const listUsersAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_LIST_REQUEST\r\n    });\r\n\r\n    //list  users\r\n    const listUsersResponse = await getAllUsersApi();\r\n\r\n    dispatch({\r\n      type: USER_LIST_SUCCESS,\r\n      payload: listUsersResponse\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_UPDATE_PROFILE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteUserAction = (userId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_DELETE_REQUEST\r\n    });\r\n\r\n    //Delete User\r\n    await deleteUserApi(userId);\r\n\r\n    dispatch({ type: USER_DELETE_SUCCESS });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: USER_DELETE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateUserAction = (userId, userUpdateRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: USER_UPDATE_REQUEST\r\n    });\r\n\r\n    //Update User\r\n    await updateUserApi(userId, userUpdateRequestBody);\r\n\r\n    dispatch({ type: USER_UPDATE_SUCCESS });\r\n    dispatch(getUserDetails(userId));\r\n    dispatch(listUsersAction());\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: USER_UPDATE_FAIL,\r\n      payload: message\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAdmin } from '../service/CommonUtils';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listUsersAction, deleteUserAction } from '../actions/userActions';\r\n\r\nconst UserListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const userList = useSelector((state) => state.userList);\r\n  const { loading, error, users } = userList;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDelete = useSelector((state) => state.userDelete);\r\n  const { success: successDelete, error: userDeleteError } = userDelete;\r\n\r\n  useEffect(() => {\r\n    if (userInfo && isAdmin()) {\r\n      dispatch(listUsersAction());\r\n    } else {\r\n      history.push('/login');\r\n    }\r\n  }, [dispatch, history, successDelete, userInfo]);\r\n\r\n  const deleteHandler = (userId) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteUserAction(userId));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Users</h1>\r\n      {userDeleteError && <Message variant='danger'>{userDeleteError}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>USERNAME</th>\r\n              <th>FIRST NAME</th>\r\n              <th>LAST NAME</th>\r\n              <th>EMAIL</th>\r\n              <th>ROLES</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {users.map((user) => (\r\n              <tr key={user.userId}>\r\n                <td>{user.userId}</td>\r\n                <td>{user.userName}</td>\r\n                <td>{user.firstName}</td>\r\n                <td>{user.lastName}</td>\r\n                <td>\r\n                  <a href={`mailto:${user.email}`}>{user.email}</a>\r\n                </td>\r\n                <td>\r\n                  {user.roles.map((role) => {\r\n                    if (role.roleName === 'ADMIN_USER') {\r\n                      return (\r\n                        <p style={{ color: 'green' }} className='m-0 p-0'>\r\n                          <strong>{role.roleName}</strong>\r\n                        </p>\r\n                      );\r\n                    }\r\n                    return <p className='m-0 p-0'>{role.roleName}</p>;\r\n                  })}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/admin/user/${user.userId}/edit`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      <i className='fas fa-edit'></i>\r\n                    </Button>\r\n                  </LinkContainer>\r\n                  <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(user.userId)}>\r\n                    <i className='fas fa-trash'></i>\r\n                  </Button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserListScreen;\r\n","import React from 'react';\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nconst FormContainer = ({ children }) => {\r\n  return (\r\n    <Container>\r\n      <Row className='justify-content-md-center'>\r\n        <Col xs={12} md={6}>\r\n          {children}\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default FormContainer;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport FormContainer from '../components/FormContainer';\r\nimport { getUserDetails, updateUserAction } from '../actions/userActions';\r\nimport { USER_UPDATE_RESET } from '../constants/userConstants';\r\nimport { getAllRolesApi } from '../service/RestApiCalls';\r\n\r\nconst UserEditScreen = ({ match, history }) => {\r\n  const userId = match.params.id;\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [roles, setRoles] = useState([]);\r\n\r\n  const dispatch = useDispatch();\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n\r\n  const userUpdate = useSelector((state) => state.userUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = userUpdate;\r\n\r\n  const [checkedItems, setCheckedItems] = useState(new Map());\r\n\r\n  useEffect(async () => {\r\n    if (successUpdate) {\r\n      dispatch({ type: USER_UPDATE_RESET });\r\n      history.push('/admin/userlist');\r\n    } else {\r\n      if (!user.userName || user.userId !== userId) {\r\n        dispatch(getUserDetails(userId));\r\n      } else {\r\n        setFirstName(user.firstName);\r\n        setLastName(user.lastName);\r\n        setEmail(user.email);\r\n        user.roles.forEach((role) => {\r\n          checkedItems.set(role.roleName, true);\r\n          setCheckedItems(new Map(checkedItems));\r\n        });\r\n      }\r\n    }\r\n    await getAllRolesApi().then((roles) => {\r\n      setRoles(roles);\r\n    });\r\n  }, [dispatch, history, userId, user, successUpdate]);\r\n\r\n  const handleChange = (event) => {\r\n    checkedItems.set(event.target.name, event.target.checked);\r\n    setCheckedItems(new Map(checkedItems));\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n\r\n    let roles = Array.from(checkedItems)\r\n      .filter((item) => item[1] === true)\r\n      .map((i) => {\r\n        return i[0];\r\n      });\r\n\r\n    dispatch(\r\n      updateUserAction(userId, {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        roles\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/userlist' className='btn btn-dark my-3'>\r\n        Go Back\r\n      </Link>\r\n      <FormContainer>\r\n        <h1>Edit User</h1>\r\n        {loadingUpdate && <Loader />}\r\n        {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n        {loading ? (\r\n          <Loader />\r\n        ) : error ? (\r\n          <Message variant='danger'>{error}</Message>\r\n        ) : (\r\n          <Form onSubmit={submitHandler}>\r\n            <Form.Group controlId='firstName'>\r\n              <Form.Label>First Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter first name'\r\n                value={firstName}\r\n                onChange={(e) => setFirstName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='lastName'>\r\n              <Form.Label>Last Name</Form.Label>\r\n              <Form.Control\r\n                type='name'\r\n                placeholder='Enter last name'\r\n                value={lastName}\r\n                onChange={(e) => setLastName(e.target.value)}\r\n              ></Form.Control>\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId='email'>\r\n              <Form.Label>Email Address</Form.Label>\r\n              <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n            </Form.Group>\r\n\r\n            {roles.length > 0 &&\r\n              roles.map((role) => (\r\n                <div key={role.roleName}>\r\n                  <Form.Check\r\n                    key={role.roleName}\r\n                    inline\r\n                    label={`ROLE : ${role.roleName}`}\r\n                    type='checkbox'\r\n                    id={role.roleName}\r\n                    checked={!!checkedItems.get(`${role.roleName}`)}\r\n                    name={role.roleName}\r\n                    onChange={handleChange}\r\n                  />\r\n                </div>\r\n              ))}\r\n\r\n            <Button className='mt-3' type='submit' variant='primary'>\r\n              Update\r\n            </Button>\r\n          </Form>\r\n        )}\r\n      </FormContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserEditScreen;\r\n","import React from 'react';\r\n\r\nconst Footer = () => {\r\n  return <div></div>;\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\nimport { Container, Nav, Navbar, NavDropdown } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAdmin } from '../service/CommonUtils';\r\nimport { logout } from '../actions/userActions';\r\nconst Header = (props) => {\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const logoutHandler = () => {\r\n    dispatch(logout());\r\n  };\r\n\r\n  return (\r\n    <header>\r\n      <Navbar\r\n        style={{\r\n          background: 'linear-gradient(142deg, rgba(131,58,180,1) 0%, rgba(253,29,29,1) 68%, rgba(252,176,69,1) 100%)',\r\n          border: '0',\r\n          color: '#00000'\r\n        }}\r\n        className='navbar navbar-expand-lg navbar-dark'\r\n        collapseOnSelect\r\n      >\r\n        <Container>\r\n          <LinkContainer to='/'>\r\n            <Navbar.Brand className='bookstore-brand'>BookStore</Navbar.Brand>\r\n          </LinkContainer>\r\n          <Navbar.Toggle aria-controls='basic-navbar-nav' />\r\n          <Navbar.Collapse id='basic-navbar-nav'>\r\n            <Nav className='navbar-nav ml-auto'>\r\n              <LinkContainer to='/cart'>\r\n                <Nav.Link>\r\n                  <i className='p-1 fas fa-shopping-cart'></i>Cart\r\n                </Nav.Link>\r\n              </LinkContainer>\r\n              {userInfo ? (\r\n                <NavDropdown title={userInfo.userName} id='username'>\r\n                  <LinkContainer to='/userProfile'>\r\n                    <NavDropdown.Item>Profile</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <NavDropdown.Item onClick={logoutHandler}>Logout</NavDropdown.Item>\r\n                </NavDropdown>\r\n              ) : (\r\n                <LinkContainer to='/login'>\r\n                  <Nav.Link href='/login'>\r\n                    <i className='p-1 fas fa-user'></i>Sign In\r\n                  </Nav.Link>\r\n                </LinkContainer>\r\n              )}\r\n              {userInfo && isAdmin() && (\r\n                <NavDropdown title='Admin' id='adminmenu'>\r\n                  <LinkContainer to='/admin/userlist'>\r\n                    <NavDropdown.Item>Users</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/productlist'>\r\n                    <NavDropdown.Item>Products</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                  <LinkContainer to='/admin/orderlist'>\r\n                    <NavDropdown.Item>Orders</NavDropdown.Item>\r\n                  </LinkContainer>\r\n                </NavDropdown>\r\n              )}\r\n            </Nav>\r\n          </Navbar.Collapse>\r\n        </Container>\r\n      </Navbar>\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\n\r\nconst Rating = ({ value, text, color }) => {\r\n  return (\r\n    <div className='rating'>\r\n      <span>\r\n        <i style={{ color }} className={value >= 1 ? 'fas fa-star' : value >= 0.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      <span>\r\n        <i style={{ color }} className={value >= 2 ? 'fas fa-star' : value >= 1.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      <span>\r\n        <i style={{ color }} className={value >= 3 ? 'fas fa-star' : value >= 2.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      <span>\r\n        <i style={{ color }} className={value >= 4 ? 'fas fa-star' : value >= 4.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      <span>\r\n        <i style={{ color }} className={value >= 5 ? 'fas fa-star' : value >= 3.5 ? 'fas fa-star-half-alt' : 'far fa-star'}></i>\r\n      </span>\r\n      {text && <span className='mx-2'>[{text && text}]</span>}\r\n    </div>\r\n  );\r\n};\r\n\r\nRating.defaultProps = {\r\n  color: '#fee825'\r\n};\r\n\r\nexport default Rating;\r\n","import React from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { Card } from 'react-bootstrap';\r\nimport Rating from './Rating';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Product = (props) => {\r\n  const product = props.product;\r\n  return (\r\n    <>\r\n      <Card className='my-3 rounded' style={{ height: '400px' }}>\r\n        <Link to={`/product/${product.productId}`}>\r\n          <Card.Img\r\n            src={`${BACKEND_API_GATEWAY_URL}/image/${product?.imageId}`}\r\n            variant='top'\r\n            style={{ height: '250px' }}\r\n          ></Card.Img>\r\n        </Link>\r\n        <Card.Body>\r\n          <Link to={`/product/${product.productId}`}>\r\n            <Card.Title as='div'>\r\n              <strong>{product.productName}</strong>\r\n            </Card.Title>\r\n          </Link>\r\n\r\n          <Card.Text as='div'>\r\n            <Rating value={product.averageRating} text={`${product.noOfRatings} reviews`}></Rating>\r\n          </Card.Text>\r\n\r\n          <Card.Text as='div' className='my-3'>\r\n            <p>${product.price}</p>\r\n          </Card.Text>\r\n        </Card.Body>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Product;\r\n","import {\r\n  PRODUCT_LIST_REQUEST,\r\n  PRODUCT_LIST_SUCCESS,\r\n  PRODUCT_LIST_FAIL,\r\n  PRODUCT_DETAILS_REQUEST,\r\n  PRODUCT_DETAILS_SUCCESS,\r\n  PRODUCT_DETAILS_FAIL,\r\n  PRODUCT_REVIEWS_REQUEST,\r\n  PRODUCT_REVIEWS_SUCCESS,\r\n  PRODUCT_REVIEWS_FAIL,\r\n  PRODUCT_DELETE_SUCCESS,\r\n  PRODUCT_DELETE_REQUEST,\r\n  PRODUCT_DELETE_FAIL,\r\n  PRODUCT_CREATE_REQUEST,\r\n  PRODUCT_CREATE_SUCCESS,\r\n  PRODUCT_CREATE_FAIL,\r\n  PRODUCT_UPDATE_REQUEST,\r\n  PRODUCT_UPDATE_SUCCESS,\r\n  PRODUCT_UPDATE_FAIL,\r\n  PRODUCT_CREATE_REVIEW_REQUEST,\r\n  PRODUCT_CREATE_REVIEW_SUCCESS,\r\n  PRODUCT_CREATE_REVIEW_FAIL,\r\n  PRODUCT_TOP_REQUEST,\r\n  PRODUCT_TOP_SUCCESS,\r\n  PRODUCT_TOP_FAIL,\r\n  PRODUCT_IMAGE_REQUEST,\r\n  PRODUCT_IMAGE_SUCCESS,\r\n  PRODUCT_IMAGE_FAIL\r\n} from '../constants/productConstants';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport {\r\n  getAllProductsDetailApi,\r\n  getProductDetailApi,\r\n  getProductReviewsApi,\r\n  createProductReviewApi,\r\n  updateProductDetailApi,\r\n  createProductApi,\r\n  deleteProductApi,\r\n  getImageApi\r\n} from '../service/RestApiCalls';\r\n\r\nexport const listProductsAction = (pageNumber) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_LIST_REQUEST });\r\n    //Get All Products Detail\r\n    const allProductsDetail = await getAllProductsDetailApi(pageNumber || 0);\r\n    dispatch({\r\n      type: PRODUCT_LIST_SUCCESS,\r\n      payload: allProductsDetail.page.content,\r\n      pageResponse: allProductsDetail.page\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_LIST_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductDetailsAction = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_DETAILS_REQUEST });\r\n    //Get Product Detail\r\n    const productDetail = await getProductDetailApi(productId);\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_SUCCESS,\r\n      payload: productDetail\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_DETAILS_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const listProductReviewsAction = (productId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_REVIEWS_REQUEST });\r\n    //Get Product Reviews\r\n    const productReviews = await getProductReviewsApi(productId);\r\n\r\n    dispatch({\r\n      type: PRODUCT_REVIEWS_SUCCESS,\r\n      payload: productReviews\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_REVIEWS_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getImageAction = (imageId) => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: PRODUCT_IMAGE_REQUEST });\r\n    //Get Product Reviews\r\n    const base64Image = await getImageApi(imageId);\r\n\r\n    dispatch({\r\n      type: PRODUCT_IMAGE_SUCCESS,\r\n      payload: base64Image\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_IMAGE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductReviewAction = (createProductReviewRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_REQUEST\r\n    });\r\n\r\n    //Create Product Review\r\n    await createProductReviewApi(createProductReviewRequestBody);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_SUCCESS\r\n    });\r\n    dispatch(listProductDetailsAction(createProductReviewRequestBody.productId));\r\n    dispatch(listProductReviewsAction(createProductReviewRequestBody.productId));\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REVIEW_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteProductAction = (productId) => async (dispatch, getState) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_DELETE_REQUEST\r\n    });\r\n\r\n    //Delete Product\r\n    await deleteProductApi(productId);\r\n\r\n    dispatch({\r\n      type: PRODUCT_DELETE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_DELETE_FAIL,\r\n      payload: message\r\n    });\r\n  }\r\n};\r\n\r\nexport const createProductAction = (productReqBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_CREATE_REQUEST\r\n    });\r\n\r\n    //Create Product\r\n    await createProductApi(productReqBody);\r\n\r\n    dispatch({\r\n      type: PRODUCT_CREATE_SUCCESS\r\n    });\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_CREATE_FAIL,\r\n      payload: message\r\n    });\r\n  }\r\n};\r\n\r\nexport const updateProductAction = (productReqBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_REQUEST\r\n    });\r\n\r\n    //Update Product\r\n    await updateProductDetailApi(productReqBody);\r\n\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_SUCCESS\r\n    });\r\n    dispatch(listProductDetailsAction(productReqBody.productId));\r\n  } catch (error) {\r\n    const message = error.response && error.response.data.message ? error.response.data.message : error.message;\r\n    if (message === 'Not authorized, token failed') {\r\n      dispatch(logout());\r\n    }\r\n    dispatch({\r\n      type: PRODUCT_UPDATE_FAIL,\r\n      payload: message\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\n\r\nconst FullPageLoader = () => {\r\n  return (\r\n    <div className='fp-container'>\r\n      <div className='spinner-grow text-success fp-loader' role='status'>\r\n        <span className='sr-only'></span>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FullPageLoader;\r\n","import Paginate from '../components/Paginate';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Product from '../components/Product';\r\nimport Message from '../components/Message';\r\nimport { Col, Row } from 'react-bootstrap';\r\nimport { listProductsAction } from '../actions/productActions';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst HomeScreen = () => {\r\n  const dispatch = useDispatch();\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pageResponse } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProductsAction(0));\r\n  }, [dispatch]);\r\n\r\n  const handlePageClick = (data) => {\r\n    let selected = data.selected;\r\n    dispatch(listProductsAction(selected));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>Latest Products</h1>\r\n      {error ? (\r\n        <Message variant='danger'></Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            {products.map((product) => (\r\n              <Col key={product.productId} sm={12} md={6} lg={4} xl={3}>\r\n                <Product key={product.productId} product={product}></Product>\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n          {/* pageResponse?.pageable?.pageNumber */}\r\n          <Row className='m-5 justify-content-md-center'>\r\n            <ReactPaginate\r\n              previousLabel={'Previous'}\r\n              nextLabel={'Next'}\r\n              breakLabel={'...'}\r\n              breakClassName={'break-me'}\r\n              pageCount={pageResponse?.totalPages}\r\n              marginPagesDisplayed={50}\r\n              pageRangeDisplayed={10}\r\n              onPageChange={(e) => handlePageClick(e)}\r\n              containerClassName={'pagination'}\r\n              activeClassName={'page-item active'}\r\n              pageLinkClassName={'page-link'}\r\n              previousClassName={'page-link'}\r\n              nextClassName={'page-link'}\r\n            />\r\n          </Row>\r\n        </>\r\n      )}\r\n      {loading && <FullPageLoader></FullPageLoader>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { Button, Card, Col, Form, Image, ListGroup, ListGroupItem, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport { createProductReviewAction, listProductDetailsAction, listProductReviewsAction, getImageAction } from '../actions/productActions';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport Rating from '../components/Rating';\r\nimport { getImageApi, getProductDetailApi } from '../service/RestApiCalls';\r\n\r\nconst ProductScreen = (props) => {\r\n  const [qty, setQty] = useState(1);\r\n  const [rating, setRating] = useState(0);\r\n  const [reviewMessage, setReviewMessage] = useState('');\r\n  const [productimageBase64, setProductimageBase64] = useState(null);\r\n  const [product, setProduct] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error } = productDetails;\r\n\r\n  const productReviews = useSelector((state) => state.productReviews);\r\n  const { loading: loadingProductReviews, error: errorProductReviews, reviews } = productReviews;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const productReviewCreate = useSelector((state) => state.productReviewCreate);\r\n  const { success: successProductReview, loading: loadingProductReview, error: errorProductReview } = productReviewCreate;\r\n\r\n  useEffect(async () => {\r\n    // setProductimageBase64(null);\r\n    // dispatch(listProductDetailsAction(props.match.params.id));\r\n    await getProductDetailApi(props.match.params.id).then((r) => {\r\n      setProduct(r);\r\n    });\r\n    dispatch(listProductReviewsAction(props.match.params.id));\r\n    // if (product?.imageId) {\r\n    await getImageApi(product?.imageId).then((r) => {\r\n      setProductimageBase64(r);\r\n    });\r\n    // }\r\n  }, [dispatch, product?.imageId]);\r\n\r\n  const addToCartHandler = () => {\r\n    props.history.push(`/cart/${props.match.params.id}?qty=${qty}`);\r\n  };\r\n\r\n  const createProductReviewHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(\r\n      createProductReviewAction({\r\n        productId: props.match.params.id,\r\n        ratingValue: rating,\r\n        reviewMessage: reviewMessage\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link className='btn btn-dark my-3' to='/'>\r\n        Go Back\r\n      </Link>\r\n\r\n      {error ? (\r\n        <Message variant='danger'></Message>\r\n      ) : product ? (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              {productimageBase64 && (\r\n                <div style={{ minWidth: '100%', height: '400px' }}>\r\n                  <Image\r\n                    style={{ height: '100%', width: '100%' }}\r\n                    src={`${BACKEND_API_GATEWAY_URL}/image/${product?.imageId}`}\r\n                    alt={product.productName}\r\n                    fluid\r\n                  ></Image>\r\n                </div>\r\n              )}\r\n            </Col>\r\n            <Col md={3} style={{ borderLeft: '1px solid #eee' }}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroupItem>\r\n                  <h4>{product.productName}</h4>\r\n                </ListGroupItem>\r\n                <ListGroupItem>\r\n                  <Rating value={product.averageRating} text={`${product.noOfRatings} reviews`}></Rating>\r\n                </ListGroupItem>\r\n                <ListGroupItem>Price : ${product.price}</ListGroupItem>\r\n                <ListGroupItem>Description : {product.description}</ListGroupItem>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Price:</Col>\r\n                      <Col>\r\n                        <strong>${product.price}</strong>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  <ListGroupItem>\r\n                    <Row>\r\n                      <Col>Status:</Col>\r\n                      <Col>{product.availableItemCount > 0 ? 'In Stock' : 'Out of Stock'}</Col>\r\n                    </Row>\r\n                  </ListGroupItem>\r\n\r\n                  {product.availableItemCount > 0 && (\r\n                    <ListGroup.Item>\r\n                      <Row>\r\n                        <Col>Qty</Col>\r\n                        <Col>\r\n                          <Form.Control as='select' value={qty} onChange={(e) => setQty(e.target.value)}>\r\n                            {product.availableItemCount > 10\r\n                              ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                ))\r\n                              : [...Array(product.availableItemCount).keys()].map((x) => (\r\n                                  <option key={x + 1} value={x + 1}>\r\n                                    {x + 1}\r\n                                  </option>\r\n                                ))}\r\n                          </Form.Control>\r\n                        </Col>\r\n                      </Row>\r\n                    </ListGroup.Item>\r\n                  )}\r\n\r\n                  <ListGroupItem>\r\n                    <Button onClick={addToCartHandler} className='btn-block' type='button' disabled={product.availableItemCount <= 0}>\r\n                      Add to Cart\r\n                    </Button>\r\n                  </ListGroupItem>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n          <Row\r\n            className='my-4 py-4'\r\n            style={{\r\n              borderTop: '1px solid #eee',\r\n              borderBottom: '1px solid #eee'\r\n            }}\r\n          >\r\n            <Col md={6}>\r\n              <h2>Reviews</h2>\r\n              {reviews?.length === 0 && <Message>No Reviews</Message>}\r\n              <ListGroup variant='flush'>\r\n                {reviews?.map((review) => (\r\n                  <ListGroup.Item key={review.reviewId}>\r\n                    <strong>{review.userName}</strong>\r\n                    <Rating value={review.ratingValue} />\r\n                    {/* <p>{review.created_at.substring(0, 10)}</p> */}\r\n                    <p>{review.reviewMessage}</p>\r\n                  </ListGroup.Item>\r\n                ))}\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={6} style={{ borderLeft: '1px solid #eee' }}>\r\n              <ListGroup.Item>\r\n                <h2>Write a Customer Review</h2>\r\n                {successProductReview && <Message variant='success'>Review submitted successfully</Message>}\r\n                {loadingProductReview && <Loader />}\r\n                {errorProductReview && <Message variant='danger'>{errorProductReview}</Message>}\r\n                {userInfo ? (\r\n                  <Form onSubmit={createProductReviewHandler}>\r\n                    <Form.Group controlId='rating'>\r\n                      <Form.Label>Rating</Form.Label>\r\n                      <Form.Control as='select' value={rating} onChange={(e) => setRating(e.target.value)}>\r\n                        <option value=''>Select...</option>\r\n                        <option value='1'>1 - Poor</option>\r\n                        <option value='2'>2 - Fair</option>\r\n                        <option value='3'>3 - Good</option>\r\n                        <option value='4'>4 - Very Good</option>\r\n                        <option value='5'>5 - Excellent</option>\r\n                      </Form.Control>\r\n                    </Form.Group>\r\n                    <Form.Group controlId='reviewMessage'>\r\n                      <Form.Label>Review</Form.Label>\r\n                      <Form.Control\r\n                        as='textarea'\r\n                        row='3'\r\n                        value={reviewMessage}\r\n                        onChange={(e) => setReviewMessage(e.target.value)}\r\n                      ></Form.Control>\r\n                    </Form.Group>\r\n                    <Button disabled={loadingProductReview} type='submit' variant='primary'>\r\n                      Submit\r\n                    </Button>\r\n                  </Form>\r\n                ) : (\r\n                  <Message>\r\n                    Please <Link to='/login'>sign in</Link> to write a review{' '}\r\n                  </Message>\r\n                )}\r\n              </ListGroup.Item>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      ) : null}\r\n      {loading && <FullPageLoader></FullPageLoader>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductScreen;\r\n","import {\r\n  CART_ADD_ITEM_REQUEST,\r\n  CART_ADD_ITEM_SUCCESS,\r\n  CART_ADD_ITEM_FAIL,\r\n  CART_ADD_ITEM_RESET,\r\n  CART_REMOVE_ITEM_REQUEST,\r\n  CART_REMOVE_ITEM_SUCCESS,\r\n  CART_REMOVE_ITEM_FAIL,\r\n  CART_REMOVE_ITEM_RESET,\r\n  CART_SAVE_SHIPPING_ADDRESS,\r\n  CART_SAVE_PAYMENT_METHOD,\r\n  CART_DETAILS_REQUEST,\r\n  CART_DETAILS_SUCCESS,\r\n  CART_DETAILS_FAIL\r\n} from '../constants/cartConstants';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport { addToCartApi, getCartDetailsApi, removeCartItemApi } from '../service/RestApiCalls';\r\n\r\nexport const addToCartAction = (addToCartRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CART_ADD_ITEM_REQUEST\r\n    });\r\n    //Add to cart Api\r\n    await addToCartApi(addToCartRequestBody);\r\n\r\n    dispatch({\r\n      type: CART_ADD_ITEM_SUCCESS\r\n    });\r\n\r\n    //Get Cart Details\r\n    dispatch(getCartDetailsAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_ADD_ITEM_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getCartDetailsAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CART_DETAILS_REQUEST\r\n    });\r\n    //Get cart details Api\r\n    const cartResponse = await getCartDetailsApi();\r\n    dispatch({\r\n      type: CART_DETAILS_SUCCESS,\r\n      payload: cartResponse\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_DETAILS_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const removeFromCartAction = (cartItemId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: CART_REMOVE_ITEM_REQUEST\r\n    });\r\n    //Add to cart Api\r\n    await removeCartItemApi(cartItemId);\r\n\r\n    dispatch({\r\n      type: CART_REMOVE_ITEM_SUCCESS\r\n    });\r\n\r\n    //Get Cart Details\r\n    dispatch(getCartDetailsAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: CART_REMOVE_ITEM_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const saveShippingAddress = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_SHIPPING_ADDRESS,\r\n    payload: data\r\n  });\r\n\r\n  localStorage.setItem('shippingAddress', JSON.stringify(data));\r\n};\r\n\r\nexport const savePaymentMethod = (data) => (dispatch) => {\r\n  dispatch({\r\n    type: CART_SAVE_PAYMENT_METHOD,\r\n    payload: data\r\n  });\r\n\r\n  localStorage.setItem('paymentMethod', JSON.stringify(data));\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport { removeFromCartAction } from '../actions/cartActions.js';\r\nimport { getProductDetailApi } from '../service/RestApiCalls.js';\r\nimport FullPageLoader from './FullPageLoader.js';\r\nimport Message from '../components/Message';\r\nimport { useState } from 'react';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\n\r\nconst CartItem = ({ item, addToCart }) => {\r\n  const [product, setProduct] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const productDetail = await getProductDetailApi(item.productId);\r\n      setProduct(productDetail);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(getErrorMessage(err));\r\n    }\r\n  }, [item]);\r\n\r\n  const removeFromCartHandler = async (cartItemId) => {\r\n    dispatch(removeFromCartAction(cartItemId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message variant='danger'> {JSON.stringify(error.message)}</Message>\r\n      ) : (\r\n        <ListGroup.Item key={item.productId}>\r\n          <Row>\r\n            <Col md={2}>\r\n              <Image src={`${BACKEND_API_GATEWAY_URL}/image/${product?.imageId}`} alt={item.productName} fluid rounded></Image>\r\n            </Col>\r\n            <Col md={3} className='pt-4'>\r\n              <Link to={`/product/${item.productId}`}>{item.productName}</Link>\r\n            </Col>\r\n            <Col md={2} className='pt-4'>\r\n              ${item.itemPrice}\r\n            </Col>\r\n            <Col md={2} className='pt-3'>\r\n              {product && (\r\n                <>\r\n                  <Form.Control as='select' value={item.quantity} onChange={(e) => addToCart(item.productId, e.target.value)}>\r\n                    {product.availableItemCount > 11\r\n                      ? [0, 1, 2, 3, 4, 5, 6, 7, 8, 9].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))\r\n                      : [...Array(product.availableItemCount).keys()].map((x) => (\r\n                          <option key={x + 1} value={x + 1}>\r\n                            {x + 1}\r\n                          </option>\r\n                        ))}\r\n                  </Form.Control>\r\n                </>\r\n              )}\r\n            </Col>\r\n            <Col md={1} className='pt-4'>\r\n              ${item.extendedPrice}\r\n            </Col>\r\n            <Col md={2} className='pt-3 pl-5'>\r\n              <Button type='button' variant='light' onClick={() => removeFromCartHandler(item.cartItemId)}>\r\n                <i className='fas fa-trash'></i>\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      )}\r\n      {/* {loading && <FullPageLoader></FullPageLoader>} */}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Row, Col, ListGroup, Image, Form, Button, Card } from 'react-bootstrap';\r\nimport Message from '../components/Message';\r\nimport CartItem from '../components/CartItem';\r\nimport { addToCartAction, getCartDetailsAction } from '../actions/cartActions';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CartScreen = (props) => {\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search ? Number(props.location.search.split('=')[1]) : 1;\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const cartState = useSelector((state) => state.cart);\r\n  const { cart } = cartState;\r\n  let loading = cartState.loading;\r\n  let error = cartState.error;\r\n  const { userInfo } = userLogin;\r\n  const redirect = props.location.pathname + props.location.search;\r\n\r\n  useEffect(() => {\r\n    if (userInfo === null || userInfo === undefined) {\r\n      props.history.push(`/login?redirect=${redirect}`);\r\n      return;\r\n    }\r\n    if (productId) {\r\n      addToCart();\r\n    } else {\r\n      getCartDetail();\r\n    }\r\n  }, [dispatch, productId, qty, userInfo]);\r\n\r\n  const addToCart = (pId, q) => {\r\n    const addToCartRequestBody = {\r\n      productId: pId || productId,\r\n      quantity: q || qty\r\n    };\r\n    dispatch(addToCartAction(addToCartRequestBody));\r\n  };\r\n\r\n  const getCartDetail = () => {\r\n    dispatch(getCartDetailsAction());\r\n  };\r\n\r\n  const checkoutHandler = () => {\r\n    props.history.push('/login?redirect=shipping');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {error ? (\r\n        <Message variant='danger'> {JSON.stringify(error.message)}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <h1>Shopping Cart</h1>\r\n          </Row>\r\n          <Row>\r\n            <Col md={8}>\r\n              {cart == null || cart?.cartItems?.length == 0 ? (\r\n                <Message>\r\n                  Your cart is empty <Link to='/'>Go Back</Link>\r\n                </Message>\r\n              ) : (\r\n                <ListGroup.Item variant='flush'>\r\n                  {cart?.cartItems?.map((item) => (\r\n                    <CartItem key={item.productId} item={item} addToCart={addToCart}></CartItem>\r\n                  ))}\r\n                </ListGroup.Item>\r\n              )}\r\n              <Row className='m-5 justify-content-md-center'>\r\n                <LinkContainer to={'/'}>\r\n                  <a>Add more books</a>\r\n                </LinkContainer>\r\n              </Row>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h3>Subtotal ({cart?.cartItems?.length}) Items</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <h3>${cart?.totalPrice}</h3>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Button type='button' className='btn-block' disabled={cart?.cartItems?.length === 0} onClick={checkoutHandler}>\r\n                      Proceed To Checkout\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n      {loading && <FullPageLoader></FullPageLoader>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default CartScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { login } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\n\r\nconst LoginScreen = (props) => {\r\n  const [userNameOrEmail, setUserNameOrEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { loading, error, userInfo } = userLogin;\r\n\r\n  const redirect = props.location.search ? props.location.search.substring(props.location.search.indexOf('=') + 1) : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, userInfo, redirect]);\r\n\r\n  const loginSubmitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(login(userNameOrEmail, password));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1>Sign In</h1>\r\n        {error && <Message variant='danger'>{JSON.stringify(error)}</Message>}\r\n        <Form onSubmit={loginSubmitHandler}>\r\n          <Form.Group controlId='userNameOrEmail'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control\r\n              placeholder='Username or Email'\r\n              value={userNameOrEmail}\r\n              onChange={(e) => setUserNameOrEmail(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              placeholder='Password'\r\n              type='password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Sign In\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n          <Col>\r\n            New Customer? <Link to={redirect ? `/register?redirect=${redirect}` : '/register'}>Register</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n      {loading && <FullPageLoader></FullPageLoader>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Form, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport { register } from '../actions/userActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport { USER_REGISTER_RESET } from '../constants/userConstants';\r\n\r\nconst RegisterScreen = (props) => {\r\n  const [userName, setUserName] = useState('');\r\n  const [firstName, setFirstName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setconfirmPassword] = useState('');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n  const userRegister = useSelector((state) => state.userRegister);\r\n  let { loading, error, userInfo } = userRegister;\r\n\r\n  const redirect = props.location.search ? props.location.search.substring(props.location.search.indexOf('=') + 1) : '/';\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [props.history, userInfo, redirect]);\r\n\r\n  const registerHandler = (e) => {\r\n    setMessage(null);\r\n    e.preventDefault();\r\n    //Register\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n      dispatch({ type: USER_REGISTER_RESET });\r\n    } else {\r\n      dispatch(register(userName, firstName, email, password));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer>\r\n        <h1>Sign Up</h1>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {error && <Message variant='danger'>{JSON.stringify(error)}</Message>}\r\n        <Form onSubmit={registerHandler}>\r\n          <Form.Group controlId='userName'>\r\n            <Form.Label>Username</Form.Label>\r\n            <Form.Control required placeholder='Username' value={userName} onChange={(e) => setUserName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='firstName'>\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control required placeholder='First Name' value={firstName} onChange={(e) => setFirstName(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email</Form.Label>\r\n            <Form.Control required type='email' placeholder='email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder='Password'\r\n              type='password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              required\r\n              placeholder='Confirm Password'\r\n              type='password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setconfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Register\r\n          </Button>\r\n        </Form>\r\n\r\n        <Row className='py-3'>\r\n          <Col>\r\n            Have an Account? <Link to={redirect ? `/login?redirect=${redirect}` : '/login'}>Login</Link>\r\n          </Col>\r\n        </Row>\r\n      </FormContainer>\r\n      {loading && <FullPageLoader></FullPageLoader>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RegisterScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, Row, Table } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { listMyOrdersAction } from '../actions/orderActions';\r\nimport { getUserDetails, updateUserProfile } from '../actions/userActions';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport Message from '../components/Message';\r\nimport { USER_UPDATE_PROFILE_RESET } from '../constants/userConstants';\r\n\r\nconst ProfileScreen = ({ history }) => {\r\n  const [firstName, setFirstName] = useState('');\r\n  const [lastName, setLastName] = useState('');\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const [confirmPassword, setConfirmPassword] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { error: errorUserDetails, loading: loadingUserDetails, user } = userDetails;\r\n\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const { error: errorUpdateUserDetails, loading: loadingUpdateUserDetails, success } = userUpdateProfile;\r\n\r\n  const orderListMy = useSelector((state) => state.orderListMy);\r\n  const { error: errorOrderListMy, loading: loadingOrderListMy, orders } = orderListMy;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    } else {\r\n      if (!user || !user.userName) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(getUserDetails());\r\n      } else {\r\n        setFirstName(user.firstName);\r\n        setLastName(user.lastName);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n    dispatch(listMyOrdersAction());\r\n  }, [dispatch, history, userInfo, user]);\r\n\r\n  const userProfileUpdateHandler = (e) => {\r\n    e.preventDefault();\r\n    setMessage(null);\r\n    if (password !== confirmPassword) {\r\n      setMessage('Passwords do not match');\r\n    } else {\r\n      dispatch(updateUserProfile({ firstName, lastName, email, password }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={3}>\r\n        <h2>User Profile</h2>\r\n        {message && <Message variant='danger'>{message}</Message>}\r\n        {success && <Message variant='success'>Profile Updated</Message>}\r\n        {(errorUserDetails || errorUpdateUserDetails) && <Message variant='danger'>{errorUserDetails || errorUpdateUserDetails}</Message>}\r\n        <Form onSubmit={userProfileUpdateHandler}>\r\n          <Form.Group controlId='firstName'>\r\n            <Form.Label>First Name</Form.Label>\r\n            <Form.Control\r\n              type='firstName'\r\n              placeholder='Enter First Name'\r\n              value={firstName}\r\n              onChange={(e) => setFirstName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='lastName'>\r\n            <Form.Label>Last Name</Form.Label>\r\n            <Form.Control\r\n              type='lastName'\r\n              placeholder='Enter Last Name'\r\n              value={lastName}\r\n              onChange={(e) => setLastName(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='email'>\r\n            <Form.Label>Email Address</Form.Label>\r\n            <Form.Control type='email' placeholder='Enter email' value={email} onChange={(e) => setEmail(e.target.value)}></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='password'>\r\n            <Form.Label>Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Enter password'\r\n              value={password}\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Form.Group controlId='confirmPassword'>\r\n            <Form.Label>Confirm Password</Form.Label>\r\n            <Form.Control\r\n              type='password'\r\n              placeholder='Confirm password'\r\n              value={confirmPassword}\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></Form.Control>\r\n          </Form.Group>\r\n\r\n          <Button type='submit' variant='primary'>\r\n            Update\r\n          </Button>\r\n        </Form>\r\n      </Col>\r\n      <Col md={9}>\r\n        <h2>My Orders</h2>\r\n        {errorOrderListMy ? (\r\n          <Message variant='danger'>{errorOrderListMy}</Message>\r\n        ) : (\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>DATE</th>\r\n                <th>TOTAL</th>\r\n                <th>PAID</th>\r\n                <th>DELIVERED</th>\r\n                <th></th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {orders.map((order) => (\r\n                <tr key={order.orderId}>\r\n                  <td>{order.orderId}</td>\r\n                  <td>{order.created_at}</td>\r\n                  <td>{order.totalPrice}</td>\r\n                  <td>{order.paid ? order.paymentDate?.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                  <td>\r\n                    {order.delivered ? order.deliveredDate?.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}\r\n                  </td>\r\n                  <td>\r\n                    <LinkContainer to={`/order/${order.orderId}`}>\r\n                      <Button className='btn-sm' variant='light'>\r\n                        Details\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        )}\r\n      </Col>\r\n      {(loadingUserDetails || loadingUpdateUserDetails || loadingOrderListMy) && <FullPageLoader />}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default ProfileScreen;\r\n","import {\r\n  ORDER_PREVIEW_REQUEST,\r\n  ORDER_PREVIEW_SUCCESS,\r\n  ORDER_PREVIEW_FAIL,\r\n  ORDER_CREATE_REQUEST,\r\n  ORDER_CREATE_SUCCESS,\r\n  ORDER_CREATE_FAIL,\r\n  ORDER_DETAILS_FAIL,\r\n  ORDER_DETAILS_SUCCESS,\r\n  ORDER_DETAILS_REQUEST,\r\n  ORDER_PAY_FAIL,\r\n  ORDER_PAY_SUCCESS,\r\n  ORDER_PAY_REQUEST,\r\n  ORDER_LIST_MY_REQUEST,\r\n  ORDER_LIST_MY_SUCCESS,\r\n  ORDER_LIST_MY_FAIL,\r\n  ORDER_LIST_FAIL,\r\n  ORDER_LIST_SUCCESS,\r\n  ORDER_LIST_REQUEST,\r\n  ORDER_DELIVER_FAIL,\r\n  ORDER_DELIVER_SUCCESS,\r\n  ORDER_DELIVER_REQUEST\r\n} from '../constants/orderConstants';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport { getAllMyOrdersApi, previewOrderApi, placeOrderApi, getOrderApi, getAllOrdersApi } from '../service/RestApiCalls';\r\n\r\nexport const saveBillingAddressIdToLocalStorage = (billingAddressId) => (dispatch) => {\r\n  dispatch({\r\n    type: 'ORDER_SAVE_SHIPPING_ADDRESS',\r\n    payload: billingAddressId\r\n  });\r\n  localStorage.setItem('billingAddressId', billingAddressId);\r\n};\r\n\r\nexport const saveShippingAddressIdToLocalStorage = (shippingAddressId) => (dispatch) => {\r\n  dispatch({\r\n    type: 'ORDER_SAVE_BILLING_ADDRESS',\r\n    payload: shippingAddressId\r\n  });\r\n  localStorage.setItem('shippingAddressId', shippingAddressId);\r\n};\r\n\r\nexport const savePaymentMethodIdToLocalStorage = (paymentMethodId) => (dispatch) => {\r\n  dispatch({\r\n    type: 'ORDER_SAVE_PAYMENT_METHOD',\r\n    payload: paymentMethodId\r\n  });\r\n  localStorage.setItem('paymentMethodId', paymentMethodId);\r\n};\r\n\r\nexport const listOrdersAdmin = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_REQUEST\r\n    });\r\n\r\n    //Get All my Orders\r\n    const ordersData = await getAllOrdersApi();\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_SUCCESS,\r\n      payload: ordersData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const listMyOrdersAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_REQUEST\r\n    });\r\n\r\n    //Get All my Orders\r\n    const myOrdersData = await getAllMyOrdersApi();\r\n\r\n    dispatch({\r\n      type: ORDER_LIST_MY_SUCCESS,\r\n      payload: myOrdersData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_LIST_MY_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const previewOrderAction = (previewOrderRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_PREVIEW_REQUEST\r\n    });\r\n\r\n    //Preview Order\r\n    const previewOrderData = await previewOrderApi(previewOrderRequestBody);\r\n\r\n    dispatch({\r\n      type: ORDER_PREVIEW_SUCCESS,\r\n      payload: previewOrderData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_PREVIEW_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const placeOrderAction = (placeOrderRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_CREATE_REQUEST\r\n    });\r\n\r\n    //Place Order\r\n    const placeOrderData = await placeOrderApi(placeOrderRequestBody);\r\n\r\n    dispatch({\r\n      type: ORDER_CREATE_SUCCESS,\r\n      payload: placeOrderData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_CREATE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getOrderDetailsAction = (orderId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ORDER_DETAILS_REQUEST\r\n    });\r\n\r\n    //Get Order by Id\r\n    const getOrderData = await getOrderApi(orderId);\r\n\r\n    dispatch({\r\n      type: ORDER_DETAILS_SUCCESS,\r\n      payload: getOrderData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ORDER_DETAILS_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n","import React from 'react';\r\nimport { Nav } from 'react-bootstrap';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\n\r\nconst CheckoutSteps = ({ step1, step2, step3, step4 }) => {\r\n  return (\r\n    <Nav className='justify-content-center mb-4'>\r\n      <Nav.Item>\r\n        {step1 ? (\r\n          <LinkContainer to='/login'>\r\n            <Nav.Link>Sign In &nbsp; &nbsp; &nbsp; &nbsp; ></Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Sign In</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step2 ? (\r\n          <LinkContainer to='/shipping'>\r\n            <Nav.Link>Shipping &nbsp; &nbsp; &nbsp; &nbsp; ></Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Shipping</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step3 ? (\r\n          <LinkContainer to='/payment'>\r\n            <Nav.Link>Payment &nbsp; &nbsp; &nbsp; &nbsp; ></Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Payment</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n\r\n      <Nav.Item>\r\n        {step4 ? (\r\n          <LinkContainer to='/placeorder'>\r\n            <Nav.Link>Place Order</Nav.Link>\r\n          </LinkContainer>\r\n        ) : (\r\n          <Nav.Link disabled>Place Order</Nav.Link>\r\n        )}\r\n      </Nav.Item>\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default CheckoutSteps;\r\n","import {\r\n  ADDRESS_ADD_REQUEST,\r\n  ADDRESS_ADD_SUCCESS,\r\n  ADDRESS_ADD_FAIL,\r\n  ADDRESS_ADD_RESET,\r\n  ADDRESS_LIST_MY_REQUEST,\r\n  ADDRESS_LIST_MY_SUCCESS,\r\n  ADDRESS_LIST_MY_FAIL,\r\n  ADDRESS_LIST_MY_RESET,\r\n  ADDRESS_DELETE_REQUEST,\r\n  ADDRESS_DELETE_SUCCESS,\r\n  ADDRESS_DELETE_FAIL\r\n} from '../constants/addressConstants';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport { getAllAddressesApi, saveAddressApi, deleteAddressApi } from '../service/RestApiCalls';\r\n\r\nexport const saveAddressAction = (addressRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADDRESS_ADD_REQUEST\r\n    });\r\n\r\n    //save address\r\n    await saveAddressApi(addressRequestBody);\r\n\r\n    dispatch({\r\n      type: ADDRESS_ADD_SUCCESS\r\n    });\r\n    dispatch(getMyAddresesAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADDRESS_ADD_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMyAddresesAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADDRESS_LIST_MY_REQUEST\r\n    });\r\n\r\n    //Get All my addresses\r\n    const myAddressData = await getAllAddressesApi();\r\n\r\n    dispatch({\r\n      type: ADDRESS_LIST_MY_SUCCESS,\r\n      payload: myAddressData\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADDRESS_LIST_MY_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const deleteAddressAction = (addressId) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: ADDRESS_DELETE_REQUEST\r\n    });\r\n\r\n    //save address\r\n    await deleteAddressApi(addressId);\r\n\r\n    dispatch({\r\n      type: ADDRESS_DELETE_SUCCESS\r\n    });\r\n    dispatch(getMyAddresesAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: ADDRESS_DELETE_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Form, Button, Row, Col, ListGroup, InputGroup, Spinner } from 'react-bootstrap';\r\nimport { useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport { useDispatch } from 'react-redux';\r\nimport { saveShippingAddressIdToLocalStorage, saveBillingAddressIdToLocalStorage } from '../actions/orderActions';\r\nimport { getMyAddresesAction, saveAddressAction, deleteAddressAction } from '../actions/addressActions';\r\nimport Loader from '../components/Loader';\r\n\r\nconst ShippingScreen = ({ history }) => {\r\n  const [shippingCheckbox, setShippingCheckbox] = useState(true);\r\n  const [addressLine1, setAddressLine1] = useState('');\r\n  const [addressLine2, setAddressLine2] = useState('');\r\n  const [city, setCity] = useState('');\r\n  const [state, setState] = useState('');\r\n  const [postalCode, setPostalCode] = useState('');\r\n  const [country, setCountry] = useState('');\r\n  const [phone, setPhone] = useState('');\r\n  const [message, setMessage] = useState('');\r\n  const [billingAddressId, setBillingAddressId] = useState('');\r\n  const [shippingAddressId, setShippingAddressId] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addressList = useSelector((state) => state.addressListMy);\r\n  const { addresses, loading: addressListLoading, error: addressListError } = addressList;\r\n\r\n  const addressSave = useSelector((state) => state.addressSave);\r\n  const { success, loading: addressSaveLoading, error: addressSaveError } = addressSave;\r\n\r\n  useEffect(() => {\r\n    getShippingAddress();\r\n    if (addresses?.length > 0) {\r\n      setBillingAddressId(addresses[0].addressId);\r\n      setShippingAddressId(addresses[0].addressId);\r\n    }\r\n  }, [dispatch]);\r\n\r\n  const getShippingAddress = async () => {\r\n    dispatch(getMyAddresesAction());\r\n  };\r\n\r\n  const saveAddressHandler = async (e) => {\r\n    e.preventDefault();\r\n    const addressRequestBody = {\r\n      addressLine1,\r\n      addressLine2,\r\n      city,\r\n      state,\r\n      postalCode,\r\n      country,\r\n      phone\r\n    };\r\n    setAddressLine1('');\r\n    setAddressLine2('');\r\n    setCity('');\r\n    setState('');\r\n    setPostalCode('');\r\n    setCountry(0);\r\n    setPhone('');\r\n    dispatch(saveAddressAction(addressRequestBody));\r\n  };\r\n\r\n  const proceedToPayment = () => {\r\n    if (shippingAddressId === null || shippingAddressId === '') {\r\n      setMessage('Shipping Address is required');\r\n      return;\r\n    }\r\n    dispatch(saveShippingAddressIdToLocalStorage(shippingAddressId));\r\n    dispatch(saveBillingAddressIdToLocalStorage(billingAddressId));\r\n    history.push('/payment');\r\n  };\r\n\r\n  const deleteAddress = (addressId) => {\r\n    if (addressId === billingAddressId) {\r\n      setBillingAddressId(null);\r\n    }\r\n    if (addressId === shippingAddressId) {\r\n      setShippingAddressId(null);\r\n    }\r\n    dispatch(deleteAddressAction(addressId));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='justify-content-md-center'>\r\n        <CheckoutSteps step1 step2 />\r\n      </Row>\r\n      <Row className='mx-5 justify-content-md-center'>\r\n        <h1 className='mx-5 justify-content-md-center'>Address</h1>\r\n      </Row>\r\n      <hr></hr>\r\n      <>\r\n        <Row>\r\n          <Col xs={12} md={6}>\r\n            {addressListLoading ? (\r\n              <Loader></Loader>\r\n            ) : (\r\n              <>\r\n                {addressListError && <Message variant='danger'>{JSON.stringify(addressListError)}</Message>}\r\n                <h2>Select Billing Address</h2>\r\n                {addresses.map((a) => (\r\n                  <div key={a.addressId}>\r\n                    <ListGroup.Item variant='flush'>\r\n                      <InputGroup>\r\n                        <Col md={1}>\r\n                          <Form.Check\r\n                            type='radio'\r\n                            id={a.billingAddressId}\r\n                            value={billingAddressId}\r\n                            name='billingAddress'\r\n                            checked={a.addressId === billingAddressId ? true : false}\r\n                            onChange={() => {\r\n                              if (shippingCheckbox) {\r\n                                setShippingAddressId(a.addressId);\r\n                              }\r\n                              setBillingAddressId(a.addressId);\r\n                            }}\r\n                          ></Form.Check>\r\n                        </Col>\r\n                        <Col>\r\n                          <div\r\n                            className='p-2'\r\n                            style={{\r\n                              whiteSpace: 'pre-wrap',\r\n                              backgroundColor: '#eeeeee'\r\n                            }}\r\n                            onClick={() => {\r\n                              if (shippingCheckbox) {\r\n                                setShippingAddressId(a.addressId);\r\n                              }\r\n                              setBillingAddressId(a.addressId);\r\n                            }}\r\n                          >\r\n                            <p className='m-0'>{a.addressLine1} </p>\r\n                            <p className='m-0'>{a.addressLine2}</p>\r\n                            <p className='m-0'>\r\n                              {a.city}, {a.state}, {a.country}\r\n                            </p>\r\n                            <p className='m-0'>{a.postalCode}</p>\r\n                            <p className='m-0'>{a.phone}</p>\r\n                          </div>\r\n                        </Col>\r\n                        <Col md={2} className='mr-0 pr-0'>\r\n                          <Button type='button' variant='light' onClick={() => deleteAddress(a.addressId)}>\r\n                            <i className='fas fa-trash'></i>\r\n                          </Button>\r\n                        </Col>\r\n                      </InputGroup>\r\n                    </ListGroup.Item>\r\n                  </div>\r\n                ))}\r\n                <Form.Group className='m-5' controlId='shippingCheckbox'>\r\n                  <Form.Check\r\n                    type='checkbox'\r\n                    label='Shipping Address is same as Billing Address'\r\n                    checked={shippingCheckbox}\r\n                    onChange={() => {\r\n                      setShippingCheckbox(!shippingCheckbox);\r\n                    }}\r\n                  />\r\n                </Form.Group>\r\n\r\n                {!shippingCheckbox && (\r\n                  <>\r\n                    <h2>Select Shipping Address</h2>\r\n                    {addresses.map((a) => (\r\n                      <div key={a.addressId}>\r\n                        <ListGroup.Item variant='flush'>\r\n                          <InputGroup>\r\n                            <Col md={1}>\r\n                              <Form.Check\r\n                                type='radio'\r\n                                id={a.shippingAddressId}\r\n                                value={shippingAddressId}\r\n                                name='shippingAddress'\r\n                                checked={a.addressId === shippingAddressId ? true : false}\r\n                                onChange={(e) => {\r\n                                  console.log(a.addressId);\r\n                                  setShippingAddressId(a.addressId);\r\n                                }}\r\n                              ></Form.Check>\r\n                            </Col>\r\n                            <Col>\r\n                              <div\r\n                                className='p-2'\r\n                                style={{\r\n                                  whiteSpace: 'pre-wrap',\r\n                                  backgroundColor: '#eeeeee'\r\n                                }}\r\n                                onClick={(e) => {\r\n                                  console.log(a.addressId);\r\n                                  setShippingAddressId(a.addressId);\r\n                                }}\r\n                              >\r\n                                <p className='m-0'>{a.addressLine1} </p>\r\n                                <p className='m-0'>{a.addressLine2}</p>\r\n                                <p className='m-0'>{a.city}</p>\r\n                                <p className='m-0'>{a.state}</p>\r\n                                <p className='m-0'>{a.country}</p>\r\n                                <p className='m-0'>{a.postalCode}</p>\r\n                                <p className='m-0'>{a.phone}</p>\r\n                              </div>\r\n                            </Col>\r\n                            <Col md={2} className='mr-0 pr-0'>\r\n                              <Button type='button' variant='light' onClick={() => deleteAddress(a.addressId)}>\r\n                                <i className='fas fa-trash'></i>\r\n                              </Button>\r\n                            </Col>\r\n                          </InputGroup>\r\n                        </ListGroup.Item>\r\n                      </div>\r\n                    ))}\r\n                  </>\r\n                )}\r\n              </>\r\n            )}\r\n          </Col>\r\n          <Col xs={12} md={6}>\r\n            {addressSaveError && <Message variant='danger'>{JSON.stringify(addressSaveError)}</Message>}\r\n            {message && <Message variant='danger'>{message}</Message>}\r\n            <h2>\r\n              <p>Add New Address</p>\r\n            </h2>\r\n            <Form onSubmit={saveAddressHandler}>\r\n              <Row className='mx-5 justify-content-md-center'>\r\n                <Col>\r\n                  <Form.Group controlId='addressLine1'>\r\n                    <Form.Label>Address Line 1</Form.Label>\r\n                    <Form.Control\r\n                      required\r\n                      placeholder='Enter address line 1'\r\n                      value={addressLine1}\r\n                      onChange={(e) => setAddressLine1(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='addressLine2'>\r\n                    <Form.Label>Address Line 2</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter address line 2'\r\n                      value={addressLine2}\r\n                      onChange={(e) => setAddressLine2(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='city'>\r\n                    <Form.Label>City</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter city'\r\n                      value={city}\r\n                      required\r\n                      onChange={(e) => setCity(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='state'>\r\n                    <Form.Label>State</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter State'\r\n                      value={state}\r\n                      required\r\n                      onChange={(e) => setState(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='country'>\r\n                    <Form.Label>Country Code</Form.Label>\r\n                    <Form.Control as='select' value={country} required onChange={(e) => setCountry(e.target.value)}>\r\n                      <option value='0'>Select Country</option>\r\n                      <option value='AF'>Afghanistan</option>\r\n                      <option value='AX'>Aland Islands</option>\r\n                      <option value='AL'>Albania</option>\r\n                      <option value='DZ'>Algeria</option>\r\n                      <option value='AS'>American Samoa</option>\r\n                      <option value='AD'>Andorra</option>\r\n                      <option value='AO'>Angola</option>\r\n                      <option value='AI'>Anguilla</option>\r\n                      <option value='AQ'>Antarctica</option>\r\n                      <option value='AG'>Antigua and Barbuda</option>\r\n                      <option value='AR'>Argentina</option>\r\n                      <option value='AM'>Armenia</option>\r\n                      <option value='AW'>Aruba</option>\r\n                      <option value='AU'>Australia</option>\r\n                      <option value='AT'>Austria</option>\r\n                      <option value='AZ'>Azerbaijan</option>\r\n                      <option value='BS'>Bahamas</option>\r\n                      <option value='BH'>Bahrain</option>\r\n                      <option value='BD'>Bangladesh</option>\r\n                      <option value='BB'>Barbados</option>\r\n                      <option value='BY'>Belarus</option>\r\n                      <option value='BE'>Belgium</option>\r\n                      <option value='BZ'>Belize</option>\r\n                      <option value='BJ'>Benin</option>\r\n                      <option value='BM'>Bermuda</option>\r\n                      <option value='BT'>Bhutan</option>\r\n                      <option value='BO'>Bolivia</option>\r\n                      <option value='BQ'>Bonaire, Sint Eustatius and Saba</option>\r\n                      <option value='BA'>Bosnia and Herzegovina</option>\r\n                      <option value='BW'>Botswana</option>\r\n                      <option value='BV'>Bouvet Island</option>\r\n                      <option value='BR'>Brazil</option>\r\n                      <option value='IO'>British Indian Ocean Territory</option>\r\n                      <option value='BN'>Brunei Darussalam</option>\r\n                      <option value='BG'>Bulgaria</option>\r\n                      <option value='BF'>Burkina Faso</option>\r\n                      <option value='BI'>Burundi</option>\r\n                      <option value='KH'>Cambodia</option>\r\n                      <option value='CM'>Cameroon</option>\r\n                      <option value='CA'>Canada</option>\r\n                      <option value='CV'>Cape Verde</option>\r\n                      <option value='KY'>Cayman Islands</option>\r\n                      <option value='CF'>Central African Republic</option>\r\n                      <option value='TD'>Chad</option>\r\n                      <option value='CL'>Chile</option>\r\n                      <option value='CN'>China</option>\r\n                      <option value='CX'>Christmas Island</option>\r\n                      <option value='CC'>Cocos (Keeling) Islands</option>\r\n                      <option value='CO'>Colombia</option>\r\n                      <option value='KM'>Comoros</option>\r\n                      <option value='CG'>Congo</option>\r\n                      <option value='CD'>Congo, the Democratic Republic of the</option>\r\n                      <option value='CK'>Cook Islands</option>\r\n                      <option value='CR'>Costa Rica</option>\r\n                      <option value='CI'>Cote D'Ivoire</option>\r\n                      <option value='HR'>Croatia</option>\r\n                      <option value='CU'>Cuba</option>\r\n                      <option value='CW'>Curacao</option>\r\n                      <option value='CY'>Cyprus</option>\r\n                      <option value='CZ'>Czech Republic</option>\r\n                      <option value='DK'>Denmark</option>\r\n                      <option value='DJ'>Djibouti</option>\r\n                      <option value='DM'>Dominica</option>\r\n                      <option value='DO'>Dominican Republic</option>\r\n                      <option value='EC'>Ecuador</option>\r\n                      <option value='EG'>Egypt</option>\r\n                      <option value='SV'>El Salvador</option>\r\n                      <option value='GQ'>Equatorial Guinea</option>\r\n                      <option value='ER'>Eritrea</option>\r\n                      <option value='EE'>Estonia</option>\r\n                      <option value='ET'>Ethiopia</option>\r\n                      <option value='FK'>Falkland Islands (Malvinas)</option>\r\n                      <option value='FO'>Faroe Islands</option>\r\n                      <option value='FJ'>Fiji</option>\r\n                      <option value='FI'>Finland</option>\r\n                      <option value='FR'>France</option>\r\n                      <option value='GF'>French Guiana</option>\r\n                      <option value='PF'>French Polynesia</option>\r\n                      <option value='TF'>French Southern Territories</option>\r\n                      <option value='GA'>Gabon</option>\r\n                      <option value='GM'>Gambia</option>\r\n                      <option value='GE'>Georgia</option>\r\n                      <option value='DE'>Germany</option>\r\n                      <option value='GH'>Ghana</option>\r\n                      <option value='GI'>Gibraltar</option>\r\n                      <option value='GR'>Greece</option>\r\n                      <option value='GL'>Greenland</option>\r\n                      <option value='GD'>Grenada</option>\r\n                      <option value='GP'>Guadeloupe</option>\r\n                      <option value='GU'>Guam</option>\r\n                      <option value='GT'>Guatemala</option>\r\n                      <option value='GG'>Guernsey</option>\r\n                      <option value='GN'>Guinea</option>\r\n                      <option value='GW'>Guinea-Bissau</option>\r\n                      <option value='GY'>Guyana</option>\r\n                      <option value='HT'>Haiti</option>\r\n                      <option value='HM'>Heard Island and Mcdonald Islands</option>\r\n                      <option value='VA'>Holy See (Vatican City State)</option>\r\n                      <option value='HN'>Honduras</option>\r\n                      <option value='HK'>Hong Kong</option>\r\n                      <option value='HU'>Hungary</option>\r\n                      <option value='IS'>Iceland</option>\r\n                      <option value='IN'>India</option>\r\n                      <option value='ID'>Indonesia</option>\r\n                      <option value='IR'>Iran, Islamic Republic of</option>\r\n                      <option value='IQ'>Iraq</option>\r\n                      <option value='IE'>Ireland</option>\r\n                      <option value='IM'>Isle of Man</option>\r\n                      <option value='IL'>Israel</option>\r\n                      <option value='IT'>Italy</option>\r\n                      <option value='JM'>Jamaica</option>\r\n                      <option value='JP'>Japan</option>\r\n                      <option value='JE'>Jersey</option>\r\n                      <option value='JO'>Jordan</option>\r\n                      <option value='KZ'>Kazakhstan</option>\r\n                      <option value='KE'>Kenya</option>\r\n                      <option value='KI'>Kiribati</option>\r\n                      <option value='KP'>Korea, Democratic People\"s Republic of</option>\r\n                      <option value='KR'>Korea, Republic of</option>\r\n                      <option value='XK'>Kosovo</option>\r\n                      <option value='KW'>Kuwait</option>\r\n                      <option value='KG'>Kyrgyzstan</option>\r\n                      <option value='LA'>Lao People's Democratic Republic</option>\r\n                      <option value='LV'>Latvia</option>\r\n                      <option value='LB'>Lebanon</option>\r\n                      <option value='LS'>Lesotho</option>\r\n                      <option value='LR'>Liberia</option>\r\n                      <option value='LY'>Libyan Arab Jamahiriya</option>\r\n                      <option value='LI'>Liechtenstein</option>\r\n                      <option value='LT'>Lithuania</option>\r\n                      <option value='LU'>Luxembourg</option>\r\n                      <option value='MO'>Macao</option>\r\n                      <option value='MK'>Macedonia, the Former Yugoslav Republic of</option>\r\n                      <option value='MG'>Madagascar</option>\r\n                      <option value='MW'>Malawi</option>\r\n                      <option value='MY'>Malaysia</option>\r\n                      <option value='MV'>Maldives</option>\r\n                      <option value='ML'>Mali</option>\r\n                      <option value='MT'>Malta</option>\r\n                      <option value='MH'>Marshall Islands</option>\r\n                      <option value='MQ'>Martinique</option>\r\n                      <option value='MR'>Mauritania</option>\r\n                      <option value='MU'>Mauritius</option>\r\n                      <option value='YT'>Mayotte</option>\r\n                      <option value='MX'>Mexico</option>\r\n                      <option value='FM'>Micronesia, Federated States of</option>\r\n                      <option value='MD'>Moldova, Republic of</option>\r\n                      <option value='MC'>Monaco</option>\r\n                      <option value='MN'>Mongolia</option>\r\n                      <option value='ME'>Montenegro</option>\r\n                      <option value='MS'>Montserrat</option>\r\n                      <option value='MA'>Morocco</option>\r\n                      <option value='MZ'>Mozambique</option>\r\n                      <option value='MM'>Myanmar</option>\r\n                      <option value='NA'>Namibia</option>\r\n                      <option value='NR'>Nauru</option>\r\n                      <option value='NP'>Nepal</option>\r\n                      <option value='NL'>Netherlands</option>\r\n                      <option value='AN'>Netherlands Antilles</option>\r\n                      <option value='NC'>New Caledonia</option>\r\n                      <option value='NZ'>New Zealand</option>\r\n                      <option value='NI'>Nicaragua</option>\r\n                      <option value='NE'>Niger</option>\r\n                      <option value='NG'>Nigeria</option>\r\n                      <option value='NU'>Niue</option>\r\n                      <option value='NF'>Norfolk Island</option>\r\n                      <option value='MP'>Northern Mariana Islands</option>\r\n                      <option value='NO'>Norway</option>\r\n                      <option value='OM'>Oman</option>\r\n                      <option value='PK'>Pakistan</option>\r\n                      <option value='PW'>Palau</option>\r\n                      <option value='PS'>Palestinian Territory, Occupied</option>\r\n                      <option value='PA'>Panama</option>\r\n                      <option value='PG'>Papua New Guinea</option>\r\n                      <option value='PY'>Paraguay</option>\r\n                      <option value='PE'>Peru</option>\r\n                      <option value='PH'>Philippines</option>\r\n                      <option value='PN'>Pitcairn</option>\r\n                      <option value='PL'>Poland</option>\r\n                      <option value='PT'>Portugal</option>\r\n                      <option value='PR'>Puerto Rico</option>\r\n                      <option value='QA'>Qatar</option>\r\n                      <option value='RE'>Reunion</option>\r\n                      <option value='RO'>Romania</option>\r\n                      <option value='RU'>Russian Federation</option>\r\n                      <option value='RW'>Rwanda</option>\r\n                      <option value='BL'>Saint Barthelemy</option>\r\n                      <option value='SH'>Saint Helena</option>\r\n                      <option value='KN'>Saint Kitts and Nevis</option>\r\n                      <option value='LC'>Saint Lucia</option>\r\n                      <option value='MF'>Saint Martin</option>\r\n                      <option value='PM'>Saint Pierre and Miquelon</option>\r\n                      <option value='VC'>Saint Vincent and the Grenadines</option>\r\n                      <option value='WS'>Samoa</option>\r\n                      <option value='SM'>San Marino</option>\r\n                      <option value='ST'>Sao Tome and Principe</option>\r\n                      <option value='SA'>Saudi Arabia</option>\r\n                      <option value='SN'>Senegal</option>\r\n                      <option value='RS'>Serbia</option>\r\n                      <option value='CS'>Serbia and Montenegro</option>\r\n                      <option value='SC'>Seychelles</option>\r\n                      <option value='SL'>Sierra Leone</option>\r\n                      <option value='SG'>Singapore</option>\r\n                      <option value='SX'>Sint Maarten</option>\r\n                      <option value='SK'>Slovakia</option>\r\n                      <option value='SI'>Slovenia</option>\r\n                      <option value='SB'>Solomon Islands</option>\r\n                      <option value='SO'>Somalia</option>\r\n                      <option value='ZA'>South Africa</option>\r\n                      <option value='GS'>South Georgia and the South Sandwich Islands</option>\r\n                      <option value='SS'>South Sudan</option>\r\n                      <option value='ES'>Spain</option>\r\n                      <option value='LK'>Sri Lanka</option>\r\n                      <option value='SD'>Sudan</option>\r\n                      <option value='SR'>Suriname</option>\r\n                      <option value='SJ'>Svalbard and Jan Mayen</option>\r\n                      <option value='SZ'>Swaziland</option>\r\n                      <option value='SE'>Sweden</option>\r\n                      <option value='CH'>Switzerland</option>\r\n                      <option value='SY'>Syrian Arab Republic</option>\r\n                      <option value='TW'>Taiwan, Province of China</option>\r\n                      <option value='TJ'>Tajikistan</option>\r\n                      <option value='TZ'>Tanzania, United Republic of</option>\r\n                      <option value='TH'>Thailand</option>\r\n                      <option value='TL'>Timor-Leste</option>\r\n                      <option value='TG'>Togo</option>\r\n                      <option value='TK'>Tokelau</option>\r\n                      <option value='TO'>Tonga</option>\r\n                      <option value='TT'>Trinidad and Tobago</option>\r\n                      <option value='TN'>Tunisia</option>\r\n                      <option value='TR'>Turkey</option>\r\n                      <option value='TM'>Turkmenistan</option>\r\n                      <option value='TC'>Turks and Caicos Islands</option>\r\n                      <option value='TV'>Tuvalu</option>\r\n                      <option value='UG'>Uganda</option>\r\n                      <option value='UA'>Ukraine</option>\r\n                      <option value='AE'>United Arab Emirates</option>\r\n                      <option value='GB'>United Kingdom</option>\r\n                      <option value='US'>United States</option>\r\n                      <option value='UM'>United States Minor Outlying Islands</option>\r\n                      <option value='UY'>Uruguay</option>\r\n                      <option value='UZ'>Uzbekistan</option>\r\n                      <option value='VU'>Vanuatu</option>\r\n                      <option value='VE'>Venezuela</option>\r\n                      <option value='VN'>Viet Nam</option>\r\n                      <option value='VG'>Virgin Islands, British</option>\r\n                      <option value='VI'>Virgin Islands, U.s.</option>\r\n                      <option value='WF'>Wallis and Futuna</option>\r\n                      <option value='EH'>Western Sahara</option>\r\n                      <option value='YE'>Yemen</option>\r\n                      <option value='ZM'>Zambia</option>\r\n                      <option value='ZW'>Zimbabwe</option>\r\n                    </Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='postalCode'>\r\n                    <Form.Label>Postal Code</Form.Label>\r\n                    <Form.Control\r\n                      type='text'\r\n                      placeholder='Enter postal code'\r\n                      value={postalCode}\r\n                      required\r\n                      onChange={(e) => setPostalCode(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n\r\n                  <Form.Group controlId='phone'>\r\n                    <Form.Label>Phone</Form.Label>\r\n                    <Form.Control\r\n                      type='number'\r\n                      placeholder='Enter Phone number'\r\n                      value={phone}\r\n                      onChange={(e) => setPhone(e.target.value)}\r\n                    ></Form.Control>\r\n                  </Form.Group>\r\n                </Col>\r\n              </Row>\r\n              <Row className='mx-5 justify-content-md-center'>\r\n                <Button type='submit' variant='primary' disabled={addressSaveLoading}>\r\n                  {addressSaveLoading ? (\r\n                    <Spinner as='span' animation='border' size='sm' role='status' aria-hidden='true' />\r\n                  ) : (\r\n                    <>Add New Address</>\r\n                  )}\r\n                </Button>\r\n              </Row>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n\r\n        <hr></hr>\r\n        <Row className='mx-5 justify-content-md-center'>\r\n          <Button type='submit' variant='primary' onClick={proceedToPayment} className='mt-3' disabled={!shippingAddressId}>\r\n            Proceed to Payment\r\n          </Button>\r\n        </Row>\r\n      </>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ShippingScreen;\r\n","import {\r\n  PAYMENT_METHOD_ADD_REQUEST,\r\n  PAYMENT_METHOD_ADD_SUCCESS,\r\n  PAYMENT_METHOD_ADD_FAIL,\r\n  PAYMENT_METHOD_ADD_RESET,\r\n  PAYMENT_METHOD_LIST_MY_REQUEST,\r\n  PAYMENT_METHOD_LIST_MY_SUCCESS,\r\n  PAYMENT_METHOD_LIST_MY_FAIL,\r\n  PAYMENT_METHOD_LIST_MY_RESET\r\n} from '../constants/paymentConstants';\r\n\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport { getAllPaymentMethodsApi, savePaymentMethodApi } from '../service/RestApiCalls';\r\n\r\nexport const savePaymentMethodAction = (cardRequestBody) => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PAYMENT_METHOD_ADD_REQUEST\r\n    });\r\n\r\n    //save payment\r\n    await savePaymentMethodApi(cardRequestBody);\r\n\r\n    dispatch({\r\n      type: PAYMENT_METHOD_ADD_SUCCESS\r\n    });\r\n    dispatch(getMyPaymentMethodsAction());\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PAYMENT_METHOD_ADD_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n\r\nexport const getMyPaymentMethodsAction = () => async (dispatch) => {\r\n  try {\r\n    dispatch({\r\n      type: PAYMENT_METHOD_LIST_MY_REQUEST\r\n    });\r\n\r\n    //Get All my payment methods\r\n    const paymentMethodsList = await getAllPaymentMethodsApi();\r\n\r\n    dispatch({\r\n      type: PAYMENT_METHOD_LIST_MY_SUCCESS,\r\n      payload: paymentMethodsList\r\n    });\r\n  } catch (error) {\r\n    dispatch({\r\n      type: PAYMENT_METHOD_LIST_MY_FAIL,\r\n      payload: getErrorMessage(error)\r\n    });\r\n  }\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Col, Form, InputGroup, ListGroup, Row, Spinner } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { savePaymentMethodIdToLocalStorage } from '../actions/orderActions';\r\nimport { getMyPaymentMethodsAction, savePaymentMethodAction } from '../actions/paymentActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\n\r\nconst PaymentScreen = ({ history }) => {\r\n  const order = useSelector((state) => state.order);\r\n  const { shippingAddressId } = order;\r\n\r\n  if (!shippingAddressId) {\r\n    history.push('/shipping');\r\n  }\r\n\r\n  const [paymentMethodId, setPaymentMethodId] = useState('');\r\n  const [cardNumber, setCardNumber] = useState('4111 1111 1111 1111');\r\n  const [expirationMonth, setExpirationMonth] = useState('10');\r\n  const [expirationYear, setExpirationYear] = useState('23');\r\n  const [cvv, setCvv] = useState('123');\r\n  const [message, setMessage] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const paymentMethodSave = useSelector((state) => state.paymentMethodSave);\r\n  const { success, loading: saveLoading, error: saveError } = paymentMethodSave;\r\n\r\n  const paymentMethodListMy = useSelector((state) => state.paymentMethodListMy);\r\n  const { paymentMethods, loading: listLoading, error: listError } = paymentMethodListMy;\r\n\r\n  useEffect(() => {\r\n    dispatch(getMyPaymentMethodsAction());\r\n  }, [dispatch]);\r\n\r\n  const proceedToPlaceOrder = () => {\r\n    dispatch(savePaymentMethodIdToLocalStorage(paymentMethodId));\r\n    history.push('/placeorder');\r\n  };\r\n\r\n  const saveCard = () => {\r\n    const cardRequestBody = {\r\n      card: {\r\n        cardNumber: cardNumber,\r\n        expirationMonth: expirationMonth,\r\n        expirationYear: expirationYear,\r\n        cvv: cvv\r\n      }\r\n    };\r\n    dispatch(savePaymentMethodAction(cardRequestBody));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 />\r\n      <Row className='mx-5 justify-content-md-center'>\r\n        <h1 className='mx-5 justify-content-md-center'>Payment Method</h1>\r\n      </Row>\r\n      <hr></hr>\r\n      {(saveError || listError) && <Message variant='danger'>{JSON.stringify(saveError) || JSON.stringify(listError)}</Message>}\r\n      {message && <Message variant='danger'>{message}</Message>}\r\n      <Row>\r\n        <Col xs={12} md={6}>\r\n          {listLoading ? (\r\n            <Loader></Loader>\r\n          ) : (\r\n            <>\r\n              <h2>Select Payment Method</h2>\r\n              {paymentMethods.map((a) => (\r\n                <>\r\n                  <ListGroup.Item key={a.paymentMethodId} variant='flush'>\r\n                    <InputGroup>\r\n                      <Col md={1}>\r\n                        <Form.Check\r\n                          type='radio'\r\n                          id={a.paymentMethodId}\r\n                          value={paymentMethodId}\r\n                          name='paymentMethod'\r\n                          checked={a.paymentMethodId === paymentMethodId}\r\n                          onChange={(e) => {\r\n                            console.log(a.paymentMethodId);\r\n                            setPaymentMethodId(a.paymentMethodId);\r\n                          }}\r\n                        ></Form.Check>\r\n                      </Col>\r\n                      <Col>\r\n                        <div\r\n                          className='p-2'\r\n                          style={{\r\n                            whiteSpace: 'pre-wrap',\r\n                            backgroundColor: '#eeeeee'\r\n                          }}\r\n                          onClick={(e) => {\r\n                            console.log(a.paymentMethodId);\r\n                            setPaymentMethodId(a.paymentMethodId);\r\n                          }}\r\n                        >\r\n                          <p className='m-0' style={{ textTransform: 'uppercase' }}>\r\n                            {a.cardType}\r\n                          </p>\r\n                          <p className='m-0'>\r\n                            **** **** **** {a.cardLast4Digits} - {a.cardExpirationMonth} / {a.cardExpirationYear}\r\n                          </p>\r\n                        </div>\r\n                      </Col>\r\n                    </InputGroup>\r\n                  </ListGroup.Item>\r\n                </>\r\n              ))}\r\n            </>\r\n          )}\r\n        </Col>\r\n        <Col xs={12} md={6}>\r\n          <h2>\r\n            <p>Add New Card</p>\r\n          </h2>\r\n          <Row className='mx-5 justify-content-md-center'>\r\n            <Col>\r\n              <Form>\r\n                <Form.Group controlId='cardNumber'>\r\n                  <Form.Label>Card Number</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Card Number'\r\n                    value={cardNumber}\r\n                    required\r\n                    onChange={(e) => setCardNumber(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='expirationMonth'>\r\n                  <Form.Label>Expiration Month</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Exp Month'\r\n                    value={expirationMonth}\r\n                    required\r\n                    onChange={(e) => setExpirationMonth(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='expirationYear'>\r\n                  <Form.Label>Expiration Year</Form.Label>\r\n                  <Form.Control\r\n                    type='text'\r\n                    placeholder='Exp Year'\r\n                    value={expirationYear}\r\n                    required\r\n                    onChange={(e) => setExpirationYear(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n\r\n                <Form.Group controlId='cvv'>\r\n                  <Form.Label>Cvv</Form.Label>\r\n                  <Form.Control\r\n                    type='password'\r\n                    placeholder='Cvv'\r\n                    value={cvv}\r\n                    required\r\n                    onChange={(e) => setCvv(e.target.value)}\r\n                  ></Form.Control>\r\n                </Form.Group>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n          <Row className='mx-5 justify-content-md-center'>\r\n            <Button type='submit' variant='primary' onClick={saveCard} disabled={saveLoading}>\r\n              {saveLoading ? <Spinner as='span' animation='border' size='sm' role='status' aria-hidden='true' /> : <>Add Card</>}\r\n            </Button>\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n\r\n      <hr></hr>\r\n      <Row className='mx-5 justify-content-md-center'>\r\n        <Button type='submit' variant='primary' onClick={proceedToPlaceOrder} className='mt-3' disabled={!paymentMethodId}>\r\n          Proceed to PlaceOrder\r\n        </Button>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PaymentScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { Col, Image, ListGroup, Row } from 'react-bootstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Message from './Message';\r\nimport { getProductDetailApi } from '../service/RestApiCalls.js';\r\nimport { useState } from 'react';\r\nimport { getErrorMessage } from '../service/CommonUtils';\r\nimport Loader from './Loader';\r\n\r\nconst OrderItem = ({ item }) => {\r\n  const [product, setProduct] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(async () => {\r\n    try {\r\n      const productDetail = await getProductDetailApi(item.productId);\r\n      setProduct(productDetail);\r\n      setLoading(false);\r\n    } catch (err) {\r\n      setError(getErrorMessage(err));\r\n    }\r\n  }, [item]);\r\n\r\n  return (\r\n    <>\r\n      {error && <Message variant='danger'> {JSON.stringify(error.message)}</Message>}\r\n      {loading ? (\r\n        <Loader></Loader>\r\n      ) : (\r\n        <ListGroup.Item key={item.productId}>\r\n          <Row>\r\n            <Col md={2}>\r\n              <Image src={`${BACKEND_API_GATEWAY_URL}/image/${product?.imageId}`} alt={item.productName} fluid rounded></Image>\r\n            </Col>\r\n            <Col md={3} className='pt-4'>\r\n              <Link to={`/product/${item.productId}`}>{product.productName}</Link>\r\n            </Col>\r\n            <Col md={2} className='pt-4'>\r\n              ${item.orderItemPrice}\r\n            </Col>\r\n            <Col md={2} className='pt-4'>\r\n              {item.quantity}\r\n            </Col>\r\n            <Col md={1} className='pt-4'>\r\n              ${item.orderExtendedPrice}\r\n            </Col>\r\n          </Row>\r\n        </ListGroup.Item>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Button, Card, Col, ListGroup, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { placeOrderAction, previewOrderAction } from '../actions/orderActions';\r\nimport CheckoutSteps from '../components/CheckoutSteps';\r\nimport FullPageLoader from '../components/FullPageLoader';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport OrderItem from '../components/OrderItem';\r\n// import { ORDER_CREATE_RESET } from '../constants/orderConstants';\r\n// import { USER_DETAILS_RESET } from '../constants/userConstants';\r\n\r\nconst PlaceOrderScreen = (props) => {\r\n  const dispatch = useDispatch();\r\n  const [error, setError] = useState(null);\r\n  const order = useSelector((state) => state.order);\r\n\r\n  const orderPreview = useSelector((state) => state.orderPreview);\r\n  const { loading: previewOrderLoading, order: previewOrderResponse } = orderPreview;\r\n\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { loading: placeOrderLoading, order: createOrderResponse } = orderCreate;\r\n\r\n  if (!order.shippingAddressId) {\r\n    props.history.push('/shipping');\r\n  } else if (!order.billingAddressId) {\r\n    props.history.push('/shipping');\r\n  } else if (!order.paymentMethodId) {\r\n    props.history.push('/payment');\r\n  }\r\n\r\n  useEffect(() => {\r\n    previewOrder();\r\n    // eslint-disable-next-line\r\n    if (createOrderResponse?.orderId != null) {\r\n      dispatch({\r\n        type: 'ORDER_CREATE_RESET'\r\n      });\r\n      props.history.push(`/order/${createOrderResponse.orderId}`);\r\n    }\r\n  }, [dispatch, createOrderResponse, order]);\r\n\r\n  const previewOrder = () => {\r\n    const previewOrderRequestBody = {\r\n      billingAddressId: order.billingAddressId,\r\n      shippingAddressId: order.shippingAddressId,\r\n      paymentMethodId: order.paymentMethodId\r\n    };\r\n    dispatch(previewOrderAction(previewOrderRequestBody));\r\n  };\r\n\r\n  const placeOrderHandler = () => {\r\n    const placeOrderRequestBody = {\r\n      billingAddressId: order.billingAddressId,\r\n      shippingAddressId: order.shippingAddressId,\r\n      paymentMethodId: order.paymentMethodId\r\n    };\r\n\r\n    dispatch(placeOrderAction(placeOrderRequestBody));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CheckoutSteps step1 step2 step3 step4 />\r\n      {previewOrderLoading === true && <Loader></Loader>}\r\n      {previewOrderLoading === false && (\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant='flush'>\r\n              <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Address:</strong>\r\n                  {previewOrderResponse.shippingAddress.addressLine1}, {previewOrderResponse.shippingAddress.city}\r\n                  {previewOrderResponse.shippingAddress.postalCode}, {previewOrderResponse.shippingAddress.country}\r\n                </p>\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Payment Method</h2>\r\n                <strong>Method: </strong>\r\n                {previewOrderResponse.card.cardBrand.toUpperCase()} - **** **** **** {previewOrderResponse.card.last4Digits}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {previewOrderResponse.orderItems.length === 0 ? (\r\n                  <Message>Your cart is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant='flush'>\r\n                    {previewOrderResponse.orderItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <OrderItem item={item}></OrderItem>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Items</Col>\r\n                    <Col>${previewOrderResponse.itemsTotalPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>${previewOrderResponse.shippingPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Tax</Col>\r\n                    <Col>${previewOrderResponse.taxPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>${previewOrderResponse.totalPrice}</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Button type='button' className='btn-block' disabled={previewOrderResponse.orderItems === 0} onClick={placeOrderHandler}>\r\n                    Place Order\r\n                  </Button>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      {placeOrderLoading && <FullPageLoader></FullPageLoader>}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PlaceOrderScreen;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PayPalButton } from 'react-paypal-button-v2';\r\nimport { Link } from 'react-router-dom';\r\nimport { Row, Col, ListGroup, Image, Card, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { getOrderDetailsAction } from '../actions/orderActions';\r\nimport OrderItem from '../components/OrderItem';\r\n// import { getOrderDetails, payOrder, deliverOrder } from '../actions/orderActions';\r\n// import { ORDER_PAY_RESET, ORDER_DELIVER_RESET } from '../constants/orderConstants';\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id;\r\n  const [successPay, setSuccessPay] = useState(false);\r\n  const [successDeliver, setSuccessDeliver] = useState(false);\r\n  const [loadingDeliver, setLoadingDeliver] = useState(false);\r\n  const [loadingPay, setLoadingPay] = useState(false);\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  // const [order, setOrder] = useState(null);\r\n  //   const orderDetails = useSelector((state) => state.orderDetails);\r\n  //   const { order, loading, error } = orderDetails;\r\n\r\n  //   const orderPay = useSelector((state) => state.orderPay);\r\n  //   const { loading: loadingPay, success: successPay } = orderPay;\r\n\r\n  //   const orderDeliver = useSelector((state) => state.orderDeliver);\r\n  //   const { loading: loadingDeliver, success: successDeliver } = orderDeliver;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  const orderDetail = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetail;\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push('/login');\r\n    }\r\n    dispatch(getOrderDetailsAction(orderId));\r\n  }, [dispatch, orderId]);\r\n\r\n  const deliverHandler = () => {\r\n    // dispatch(deliverOrder(order));\r\n  };\r\n\r\n  const getRandomNumber = () => {\r\n    return Math.floor(Math.random() * 10);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {loading === true ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <h1>Order - {order.orderId}</h1>\r\n          <hr></hr>\r\n          <Row>\r\n            <Col md={8}>\r\n              <ListGroup variant='flush'>\r\n                <ListGroup.Item>\r\n                  <h2>Shipping</h2>\r\n                  <p>\r\n                    <strong>Name: </strong> {userInfo.userName}\r\n                  </p>\r\n                  <p>\r\n                    <strong>Email: </strong> <a href={`mailto:${userInfo.email}`}>{userInfo.email}</a>\r\n                  </p>\r\n                  <p>\r\n                    <strong>Address:</strong>\r\n                    {order.shippingAddress.addressLine1}, {order.shippingAddress.city} {order.shippingAddress.postalCode},{' '}\r\n                    {order.shippingAddress.country}\r\n                  </p>\r\n                  {order.delivered ? (\r\n                    <Message variant='success'>Delivered on {order.deliveredAt}</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not Delivered</Message>\r\n                  )}\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Payment Method</h2>\r\n                  <p>\r\n                    <strong>Method: </strong>\r\n                    {order.card.cardBrand.toUpperCase()} - **** **** **** {order.card.last4Digits}\r\n                  </p>\r\n                  {order.paid ? (\r\n                    <Message variant='success'>Paid on {order.paymentDate}</Message>\r\n                  ) : (\r\n                    <Message variant='danger'>Not Paid</Message>\r\n                  )}\r\n\r\n                  <p>\r\n                    <strong>Payment Receipt : </strong>\r\n                    <a href={order.paymentReceiptUrl} target='_blank'>\r\n                      {order.paymentReceiptUrl}\r\n                    </a>\r\n                  </p>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <h2>Order Items</h2>\r\n                  {order.orderItems.length === 0 ? (\r\n                    <Message>Order is empty</Message>\r\n                  ) : (\r\n                    <ListGroup variant='flush'>\r\n                      {order.orderItems.map((item, index) => (\r\n                        <OrderItem item={item}></OrderItem>\r\n                      ))}\r\n                    </ListGroup>\r\n                  )}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={4}>\r\n              <Card>\r\n                <ListGroup variant='flush'>\r\n                  <ListGroup.Item>\r\n                    <h2>Order Summary</h2>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Items</Col>\r\n                      <Col>${order.itemsTotalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Shipping</Col>\r\n                      <Col>${order.shippingPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Tax</Col>\r\n                      <Col>${order.taxPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>Total</Col>\r\n                      <Col>${order.totalPrice}</Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  {loadingDeliver && <Loader />}\r\n                  {userInfo && userInfo.isAdmin && order.isPaid && !order.isDelivered && (\r\n                    <ListGroup.Item>\r\n                      <Button type='button' className='btn btn-block' onClick={deliverHandler}>\r\n                        Mark As Delivered\r\n                      </Button>\r\n                    </ListGroup.Item>\r\n                  )}\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button, Row, Col } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isAdmin } from '../service/CommonUtils';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listProductsAction, deleteProductAction } from '../actions/productActions';\r\nimport { PRODUCT_CREATE_RESET } from '../constants/productConstants';\r\nimport ReactPaginate from 'react-paginate';\r\n\r\nconst ProductListScreen = ({ history, match }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products, pageResponse } = productList;\r\n\r\n  const productDelete = useSelector((state) => state.productDelete);\r\n  const { loading: loadingDelete, error: errorDelete, success: successDelete } = productDelete;\r\n\r\n  const productCreate = useSelector((state) => state.productCreate);\r\n  const { loading: loadingCreate, error: errorCreate, success: successCreate, product: createdProduct } = productCreate;\r\n\r\n  const userLogin = useSelector((state) => state.userLogin);\r\n  const { userInfo } = userLogin;\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: PRODUCT_CREATE_RESET });\r\n\r\n    if (!userInfo || !isAdmin()) {\r\n      history.push('/login');\r\n    }\r\n    dispatch(listProductsAction(0));\r\n  }, [dispatch, history, userInfo, successDelete, successCreate, createdProduct]);\r\n\r\n  const deleteHandler = (id) => {\r\n    if (window.confirm('Are you sure')) {\r\n      dispatch(deleteProductAction(id));\r\n    }\r\n  };\r\n\r\n  const createProductHandler = () => {\r\n    history.push('/admin/product/create');\r\n  };\r\n\r\n  const handlePageClick = (data) => {\r\n    let selected = data.selected;\r\n    dispatch(listProductsAction(selected));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Row className='align-items-center'>\r\n        <Col>\r\n          <h1>Products</h1>\r\n        </Col>\r\n        <Col className='text-right'>\r\n          <Button className='my-3' onClick={createProductHandler}>\r\n            <i className='fas fa-plus'></i> Create Product\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n      {loadingDelete && <Loader />}\r\n      {errorDelete && <Message variant='danger'>{errorDelete}</Message>}\r\n      {loadingCreate && <Loader />}\r\n      {errorCreate && <Message variant='danger'>{errorCreate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Table striped bordered hover responsive className='table-sm'>\r\n            <thead>\r\n              <tr>\r\n                <th>ID</th>\r\n                <th>NAME</th>\r\n                <th>PRICE</th>\r\n                <th>CATEGORY</th>\r\n                <th>IMAGE ID</th>\r\n                <th>AVAILABLE ITEM COUNT</th>\r\n                <th>ACTIONS</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {products?.map((product) => (\r\n                <tr key={product.productId}>\r\n                  <td>{product.productId}</td>\r\n                  <td>{product.productName}</td>\r\n                  <td>${product.price}</td>\r\n                  <td>{product.productCategory}</td>\r\n                  <td>{product.imageId}</td>\r\n                  <td>{product.availableItemCount}</td>\r\n                  <td>\r\n                    <LinkContainer to={`/admin/product/${product.productId}/edit`}>\r\n                      <Button variant='light' className='btn-sm'>\r\n                        <i className='fas fa-edit'></i>\r\n                      </Button>\r\n                    </LinkContainer>\r\n                    <Button variant='danger' className='btn-sm' onClick={() => deleteHandler(product.productId)}>\r\n                      <i className='fas fa-trash'></i>\r\n                    </Button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </>\r\n      )}\r\n\r\n      <Row className='m-5 justify-content-md-center'>\r\n        <ReactPaginate\r\n          previousLabel={'Previous'}\r\n          nextLabel={'Next'}\r\n          breakLabel={'...'}\r\n          breakClassName={'break-me'}\r\n          pageCount={pageResponse?.totalPages}\r\n          marginPagesDisplayed={50}\r\n          pageRangeDisplayed={10}\r\n          onPageChange={(e) => handlePageClick(e)}\r\n          containerClassName={'pagination'}\r\n          activeClassName={'page-item active'}\r\n          pageLinkClassName={'page-link'}\r\n          previousClassName={'page-link'}\r\n          nextClassName={'page-link'}\r\n        />\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductListScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { listProductDetailsAction, updateProductAction } from '../actions/productActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { PRODUCT_UPDATE_RESET } from '../constants/productConstants';\r\nimport { uploadImageApi } from '../service/RestApiCalls';\r\n\r\nconst ProductEditScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n\r\n  const [productName, setProductName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [availableItemCount, setAvailableItemCount] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  const productUpdate = useSelector((state) => state.productUpdate);\r\n  const { loading: loadingUpdate, error: errorUpdate, success: successUpdate } = productUpdate;\r\n\r\n  useEffect(() => {\r\n    if (successUpdate) {\r\n      dispatch({ type: PRODUCT_UPDATE_RESET });\r\n      history.push('/admin/productlist');\r\n    } else {\r\n      if (!product?.productName || product?.productId !== productId) {\r\n        dispatch(listProductDetailsAction(productId));\r\n      } else {\r\n        setProductName(product.productName);\r\n        setPrice(product.price);\r\n        setImage(product.imageId);\r\n        setAvailableItemCount(product.availableItemCount);\r\n        setDescription(product.description);\r\n      }\r\n    }\r\n  }, [dispatch, history, productId, product, successUpdate]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n    const formData = new FormData();\r\n    formData.append('imageFile', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n\r\n      const { imageId } = await uploadImageApi(config, formData);\r\n      setImage(imageId);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = (e) => {\r\n    dispatch(\r\n      updateProductAction({\r\n        productId,\r\n        productName,\r\n        price,\r\n        imageId: image,\r\n        description,\r\n        availableItemCount\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-dark my-3'>\r\n        Go Back\r\n      </Link>\r\n      <h1>Edit Product</h1>\r\n      <hr></hr>\r\n      {loadingUpdate && <Loader />}\r\n      {errorUpdate && <Message variant='danger'>{errorUpdate}</Message>}\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Row>\r\n                <Form.Group controlId='image'>\r\n                  <img\r\n                    src={`${BACKEND_API_GATEWAY_URL}/image/${image}`}\r\n                    alt={image}\r\n                    style={{ height: '400px' }}\r\n                    fluid\r\n                    rounded\r\n                  ></img>\r\n\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.File className='mr-4' id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={productName}\r\n                  onChange={(e) => setProductName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='price'>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type='number'\r\n                  placeholder='Enter price'\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                  type='number'\r\n                  placeholder='Enter countInStock'\r\n                  value={availableItemCount}\r\n                  onChange={(e) => setAvailableItemCount(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter description'\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className='m-5 justify-content-md-center'>\r\n            <Button type='submit' variant='primary' onClick={submitHandler}>\r\n              Update\r\n            </Button>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductEditScreen;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { BACKEND_API_GATEWAY_URL } from '../constants/appConstants';\r\nimport { Button, Col, Form, Row } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { createProductAction } from '../actions/productActions';\r\nimport FormContainer from '../components/FormContainer';\r\nimport Loader from '../components/Loader';\r\nimport Message from '../components/Message';\r\nimport { uploadImageApi, getProductCategories } from '../service/RestApiCalls';\r\n\r\nconst ProductCreateScreen = ({ match, history }) => {\r\n  const productId = match.params.id;\r\n  const [productName, setProductName] = useState('');\r\n  const [price, setPrice] = useState(0);\r\n  const [image, setImage] = useState('');\r\n  const [availableItemCount, setAvailableItemCount] = useState(0);\r\n  const [description, setDescription] = useState('');\r\n  const [uploading, setUploading] = useState(false);\r\n  const [productCategories, setProductCategories] = useState([]);\r\n  const [productCategory, setProductCategory] = useState('');\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const productDetails = useSelector((state) => state.productDetails);\r\n  const { loading, error, product } = productDetails;\r\n\r\n  useEffect(async () => {\r\n    await getProductCategories().then((res) => {\r\n      setProductCategories(res.page.content);\r\n    });\r\n  }, [dispatch, history, productId, product]);\r\n\r\n  const uploadFileHandler = async (e) => {\r\n    const file = e.target.files[0];\r\n\r\n    const formData = new FormData();\r\n    formData.append('imageFile', file);\r\n    setUploading(true);\r\n\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'Content-Type': 'multipart/form-data'\r\n        }\r\n      };\r\n\r\n      const { imageId } = await uploadImageApi(config, formData);\r\n      setImage(imageId);\r\n      setUploading(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    dispatch(\r\n      createProductAction({\r\n        productId,\r\n        productName,\r\n        price,\r\n        imageId: image,\r\n        description,\r\n        availableItemCount,\r\n        productCategoryId: productCategory\r\n      })\r\n    );\r\n    history.push('/admin/productlist');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Link to='/admin/productlist' className='btn btn-dark my-3'>\r\n        Go Back\r\n      </Link>\r\n\r\n      <h1>Create Product</h1>\r\n      <hr></hr>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={4}>\r\n              <Row>\r\n                <Form.Group controlId='image'>\r\n                  <img\r\n                    src={`${BACKEND_API_GATEWAY_URL}/image/${image}`}\r\n                    alt={image}\r\n                    style={{ height: '400px' }}\r\n                    fluid\r\n                    rounded\r\n                  ></img>\r\n                  {uploading && <Loader />}\r\n                </Form.Group>\r\n                <Form.File className='mt-5 mr-4' id='image-file' label='Choose File' custom onChange={uploadFileHandler}></Form.File>\r\n              </Row>\r\n            </Col>\r\n            <Col>\r\n              <Form.Group controlId='name'>\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type='name'\r\n                  placeholder='Enter name'\r\n                  value={productName}\r\n                  onChange={(e) => setProductName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='price'>\r\n                <Form.Label>Price</Form.Label>\r\n                <Form.Control\r\n                  type='number'\r\n                  placeholder='Enter price'\r\n                  value={price}\r\n                  onChange={(e) => setPrice(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='countInStock'>\r\n                <Form.Label>Count In Stock</Form.Label>\r\n                <Form.Control\r\n                  type='number'\r\n                  placeholder='Enter countInStock'\r\n                  value={availableItemCount}\r\n                  onChange={(e) => setAvailableItemCount(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='description'>\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control\r\n                  type='text'\r\n                  placeholder='Enter description'\r\n                  value={description}\r\n                  onChange={(e) => setDescription(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n\r\n              <Form.Group controlId='productCategory'>\r\n                <Form.Label>Product Category</Form.Label>\r\n                <Form.Control as='select' value={productCategory} required onChange={(e) => setProductCategory(e.target.value)}>\r\n                  <option value='0'>Select Product Category</option>\r\n                  {productCategories.length > 0 &&\r\n                    productCategories.map((pc) => {\r\n                      return (\r\n                        <option key={pc.productCategoryId} value={pc.productCategoryId}>\r\n                          {pc.productCategoryName}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Col>\r\n          </Row>\r\n          <Row className='m-5 justify-content-md-center' onClick={submitHandler}>\r\n            <Button type='submit' variant='primary'>\r\n              Create Product\r\n            </Button>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductCreateScreen;\r\n","import React, { useEffect } from 'react';\r\nimport { LinkContainer } from 'react-router-bootstrap';\r\nimport { Table, Button } from 'react-bootstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Message from '../components/Message';\r\nimport Loader from '../components/Loader';\r\nimport { listOrdersAdmin } from '../actions/orderActions';\r\n\r\nconst OrderListScreen = ({ history }) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const orderList = useSelector((state) => state.orderListAll);\r\n  const { loading, error, orders } = orderList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listOrdersAdmin());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <h1>Orders</h1>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant='danger'>{error}</Message>\r\n      ) : (\r\n        <Table striped bordered hover responsive className='table-sm'>\r\n          <thead>\r\n            <tr>\r\n              <th>ID</th>\r\n              <th>DATE</th>\r\n              <th>TOTAL</th>\r\n              <th>PAID</th>\r\n              <th>DELIVERED</th>\r\n              <th></th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {orders.map((order) => (\r\n              <tr key={order.orderId}>\r\n                <td>{order.orderId}</td>\r\n                <td>{order.created_at.substring(0, 10)}</td>\r\n                <td>${order.totalPrice}</td>\r\n                <td>{order.paid ? order.paymentDate?.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}</td>\r\n                <td>\r\n                  {order.delivered ? order.deliveredDate?.substring(0, 10) : <i className='fas fa-times' style={{ color: 'red' }}></i>}\r\n                </td>\r\n                <td>\r\n                  <LinkContainer to={`/order/${order.orderId}`}>\r\n                    <Button variant='light' className='btn-sm'>\r\n                      Details\r\n                    </Button>\r\n                  </LinkContainer>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default OrderListScreen;\r\n","import { Container } from 'react-bootstrap';\r\nimport { BrowserRouter, Route } from 'react-router-dom';\r\nimport './App.css';\r\nimport UserListScreen from './screens/UserListScreen';\r\nimport UserEditScreen from './screens/UserEditScreen';\r\nimport Footer from './components/Footer';\r\nimport Header from './components/Header';\r\nimport HomeScreen from './screens/HomeScreen';\r\nimport ProductScreen from './screens/ProductScreen';\r\nimport CartScreen from './screens/CartScreen';\r\nimport LoginScreen from './screens/LoginScreen';\r\nimport RegisterScreen from './screens/RegisterScreen';\r\nimport ProfileScreen from './screens/ProfileScreen';\r\nimport ShippingScreen from './screens/ShippingScreen';\r\nimport PaymentScreen from './screens/PaymentScreen';\r\nimport PlaceOrderScreen from './screens/PlaceOrderScreen';\r\nimport OrderScreen from './screens/OrderScreen';\r\nimport ProductListScreen from './screens/ProductListScreen';\r\nimport ProductEditScreen from './screens/ProductEditScreen';\r\nimport ProductCreateScreen from './screens/ProductCreateScreen';\r\nimport { createBrowserHistory } from 'history';\r\nimport OrderListScreen from './screens/OrderListScreen';\r\n\r\nexport const history = createBrowserHistory();\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter history={history}>\r\n      <Header></Header>\r\n      <main className='py-3'>\r\n        <Container>\r\n          <Route path='/order/:id' component={OrderScreen} />\r\n          <Route path='/login' component={LoginScreen}></Route>\r\n          <Route path='/payment' component={PaymentScreen}></Route>\r\n          <Route path='/placeOrder' component={PlaceOrderScreen}></Route>\r\n          <Route path='/shipping' component={ShippingScreen}></Route>\r\n          <Route path='/userProfile' component={ProfileScreen} />\r\n          <Route path='/register' component={RegisterScreen}></Route>\r\n          <Route path='/product/:id' component={ProductScreen}></Route>\r\n          <Route path='/cart/:id?' component={CartScreen}></Route>\r\n          <Route path='/admin/userlist' component={UserListScreen} />\r\n          <Route path='/admin/user/:id/edit' component={UserEditScreen} />\r\n          <Route path='/admin/productlist' component={ProductListScreen} exact />\r\n          <Route path='/admin/productlist/:pageNumber' component={ProductListScreen} exact />\r\n          <Route path='/admin/product/:id/edit' component={ProductEditScreen} />\r\n          <Route path='/admin/product/create' component={ProductCreateScreen} />\r\n          <Route path='/admin/orderlist' component={OrderListScreen} />\r\n          <Route path='/' component={HomeScreen} exact></Route>\r\n        </Container>\r\n      </main>\r\n      <Footer> </Footer>\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = (onPerfEntry) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './store';\r\nimport './bootstrap.min.css';\r\nimport './index.css';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\n\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <React.StrictMode>\r\n      <App />\r\n    </React.StrictMode>\r\n  </Provider>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}